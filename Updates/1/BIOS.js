var BIOS_Ver = "0.01_test"
var Client_Ver = "0.5.2"
var BIOSfile = "";
var b64Client =  "<h1>OEXE CLIENT</h1>
<p>
    upload an html file to to parse or upload a OEXE file to run
</p>

<div id="Upload">
<input id="fileInput" type="file" name="file" />
<input name="exeU" id="exeURL" placeholder="OEXE URL" style="position:absolute;bottom: 0; left: 50%; transform: translate(-50%,0);margin-bottom: 15px;" type="text">

</div>
<br>
<button class="btn" onclick="Execute();">EXECUTE OEXE</button>
<br><button class="btn" onclick="ExecuteURL(document.getElementById('exeURL').value);">EXECUTE OEXE FROM URL</button>
<br>
<button class="btn" onclick="if (StoreLoaded){OpenStore()}else {alert('OEXE store not loaded') }">OEXE STORE</button>
<h2>DEV TOOLS</h2>
<button onclick="Compile(fd);" class="btn">Compile OEXE</button>
<br>
<button onclick="IBC()" class="btn">Import brodcastchannel</button>
<br>
<button onclick="PostBC(prompt('script'))" class="btn">send to BC</button>






<br>
<br>

<h3 class="bit" style="color:lime;font-size:x-large;">OASIS OEXE SHELL</h3>
<div class="bit" id="output"></div>
	

<div class="bit"><textarea id="input" class="input" wrap="off" onkeydown="inputKeydown(event)" rows="1"></textarea></div>
	









<button onclick="openPKG()" id="SM">Script manager</button>




<style>

#SM {
	position: fixed;
	top: 0;
	right: 0;
	padding: 10px;
	border-radius: 10px;
	background-color: #555;
	color: white;
}
#SM:hover {
background-color: #333;
}

	body {
	  font-family: 'Lato', sans-serif;
	}
	
	.overlay {
	  height: 0%;
	  width: 100%;
	  position: fixed;
	  z-index: 1;
	  bottom: 0;
	  left: 0;
	  background-color: rgb(0,0,0);
	  background-color: rgba(0,0,0, 0.9);
	  overflow-y: hidden;
	  transition: 0.5s;
	}
	
	.overlay-content {
	  position: relative;
	  top: 5%;
	  width: 100%;
	  text-align: center;
	}
	
	.overlay a {
	  padding: 8px;
	  text-decoration: none;
	  font-size: 36px;
	  color: #818181;
	  display: block;
	  transition: 0.3s;
	}
	
	.overlay a:hover, .overlay a:focus {
	  color: #f1f1f1;
	}
	
	.overlay .closebtn {
	  position: absolute;
	  top: 20px;
	  right: 45px;
	  font-size: 60px;
	}
	
	@media screen and (max-height: 450px) {
	  .overlay {overflow-y: auto;}
	  .overlay a {font-size: 20px}
	  .overlay .closebtn {
	  font-size: 40px;
	  top: 15px;
	  right: 35px;
	  }
	}

	.Loaded {
		padding: 10px;
		border-radius: 10px;
	}
	.Yes {
		background-color: lime;
	}
	.No {
		background-color: red;
	}
	</style>
	
	
	<div id="ScriptManager" class="overlay">
	  <a href="javascript:void(0)" class="closebtn" onclick="closePKG()">&times;</a>
	  <div class="overlay-content">
<h1>Script manager</h1>
<p id="C_INDEX"></p>
<p id="S_INDEX"></p>  <button onclick="localStorage.setItem('OEXE_index','0'); DisplayScripts()">Reset index</button>
<button onclick="GetLatestIndex()">Get Current index</button>
<br>
<button onclick="GetStoreIndex()">Get Current Store index</button>
<button onclick="localStorage.setItem('OEXE_store_index','0'); DisplayScripts()">Reset store index</button>
<div id="myScripts"></div>
	  </div>
	</div>
	
	
	
	<script>
		var Scripts = [];
		var PKGs = [];
		var TestPKG = {
			PKGname: "TestPKG",
			index: 'dmFyIENPTVBfREFUQSA9IHsianMiOlt7ImNvZGUiOiIKCgpmdW5jdGlvbiBicm93c2VyKCkgewogICAgIHdpbmRvdy5vcGVuKAogICAgICAgICAgImh0dHBzOi8vZzFrazQuY3NiLmFwcCIsCiAgICAgICAgICAiX2JsYW5rIiwKICAgICAgICAgICJ0b29sYmFyPXllcyxzY3JvbGxiYXJzPXllcyxyZXNpemFibGU9eWVzLHRvcD01MDAsbGVmdD01MDAsd2lkdGg9MTAwMCxoZWlnaHQ9NTAwIgogICAgICAgICk7Cn0KCmZ1bmN0aW9uIGZyYW1lKHVybCkKIHsKICAgICAoZnVuY3Rpb24oKSB7CiAgLy8gY29udGFpbmVyCiAgdmFyIGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogIGNvbnRhaW5lci5pZCA9ICJsaW5rLXZpZXdlciI7CgogIGNvbnRhaW5lci5zdHlsZS5hbGwgPSAidW5zZXQiOwoKICBjb250YWluZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNGRkYiOwogIGNvbnRhaW5lci5zdHlsZS53aWR0aCA9ICI0MDBweCI7CiAgY29udGFpbmVyLnN0eWxlLmJvcmRlciA9ICJzb2xpZCAxcHggI0FBQSI7CiAgY29udGFpbmVyLnN0eWxlLmJvcmRlclJhZGl1cyA9ICIycHgiOwogIGNvbnRhaW5lci5zdHlsZS5wb3NpdGlvbiA9ICJmaXhlZCI7CiAgY29udGFpbmVyLnN0eWxlLnRvcCA9ICIxMDBweCI7CiAgY29udGFpbmVyLnN0eWxlLmxlZnQgPSAiMTAwcHgiOwogIGNvbnRhaW5lci5zdHlsZS56SW5kZXggPSAiOTk5OTk5OTk5OTk5OTk5OTk5OSI7CgogIC8vIGlGcmFtZQogIHZhciBpRnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpZnJhbWUiKTsKICBpRnJhbWUuaWQgPSAibGluay12aWV3ZXItaWZyYW1lIjsKCiAgaUZyYW1lLnN0eWxlLmFsbCA9ICJ1bnNldCI7CgogIGlGcmFtZS5zdHlsZS5tYXJnaW4gPSAiMHB4IjsKICBpRnJhbWUuc3R5bGUud2lkdGggPSBjb250YWluZXIuc3R5bGUud2lkdGg7CiAgaUZyYW1lLmhlaWdodCA9IGlGcmFtZS5zdHlsZS5oZWlnaHQgPSAiMjAwcHgiOwogIGlGcmFtZS5zdHlsZS5ib3JkZXIgPSAibm9uZSI7CiAgaUZyYW1lLnNyYyA9ICJkYXRhOnRleHQvaHRtbCwgPGgxIHN0eWxlPSdtYXJnaW46IDQwcHggMHB4IDIwcHggMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyc+RW50ZXIgYSBsaW5rIHRvIGdldCBzdGFydGVkITwvaDE+IjsKCiAgaUZyYW1lLnN0eWxlLnJlc2l6ZSA9ICJib3RoIjsKICBpRnJhbWUuc3R5bGUub3ZlcmZsb3cgPSAiaGlkZGVuIjsKCiAgLy8gY29udGVudCBob2xkZXIKICB2YXIgY29udGVudEhvbGRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogIGNvbnRlbnRIb2xkZXIuaWQgPSAibGluay12aWV3ZXItY29udGVudC1ob2xkZXIiOwoKICBjb250ZW50SG9sZGVyLnN0eWxlLmFsbCA9ICJ1bnNldCI7CgogIGNvbnRlbnRIb2xkZXIuc3R5bGUud2lkdGggPSAiNDAwcHgiOwogIGNvbnRlbnRIb2xkZXIuc3R5bGUuaGVpZ2h0ID0gaUZyYW1lLmhlaWdodDsKICBjb250ZW50SG9sZGVyLnN0eWxlLnBhZGRpbmcgPSAiMHB4IjsKICBjb250ZW50SG9sZGVyLnN0eWxlLm1hcmdpbiA9ICIwcHgiOwoKICBjb250ZW50SG9sZGVyLmFwcGVuZChpRnJhbWUpOwogIGNvbnRhaW5lci5hcHBlbmQoY29udGVudEhvbGRlcik7CgogIC8vIGhlYWRlcgogIHZhciBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICBoZWFkZXIuaWQgPSAibGluay12aWV3ZXItaGVhZGVyIjsKCiAgaGVhZGVyLnN0eWxlLmFsbCA9ICJ1bnNldCI7CgogIGhlYWRlci5zdHlsZS5kaXNwbGF5ID0gImZsZXgiOwogIGhlYWRlci5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICJzcGFjZS1iZXR3ZWVuIjsKICBoZWFkZXIuc3R5bGUuYWxpZ25JdGVtcyA9ICJjZW50ZXIiOwogIGhlYWRlci5zdHlsZS51c2VyU2VsZWN0ID0gIm5vbmUiOwogIGhlYWRlci5zdHlsZS5wYWRkaW5nID0gIjNweCI7CiAgaGVhZGVyLnN0eWxlLm1hcmdpbiA9ICIwcHgiOwogIGhlYWRlci5zdHlsZS5ib3JkZXJCb3R0b20gPSAic29saWQgMXB4ICNBQUEiOwoKICBoZWFkZXIuc3R5bGUuaGVpZ2h0ID0gIjIwcHgiOwogIGhlYWRlci5zdHlsZS53aWR0aCA9IE51bWJlcihjb250ZW50SG9sZGVyLnN0eWxlLndpZHRoLnNsaWNlKDAsIC0yKSAtIDYpICsgInB4IjsKCiAgdmFyIGRyYWdnZWQgPSBmYWxzZTsKICB2YXIgc3RhcnRYID0gMDsKICB2YXIgc3RhcnRZID0gMDsKICBoZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgIHN0YXJ0WCA9IE51bWJlcihjb250YWluZXIuc3R5bGUubGVmdC5zbGljZSgwLCAtMikpIC0gZXZlbnQuY2xpZW50WDsKICAgIHN0YXJ0WSA9IE51bWJlcihjb250YWluZXIuc3R5bGUudG9wLnNsaWNlKDAsIC0yKSkgLSBldmVudC5jbGllbnRZOwogICAgZHJhZ2dlZCA9IHRydWU7CiAgfSk7CiAgaGVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNldXAiLCBmdW5jdGlvbihldmVudCkgewogICAgZHJhZ2dlZCA9IGZhbHNlOwogIH0pOwoKICAvLyBBbHNvIGtlZXBpbmcgdHJhY2sgb2Ygc2l6ZSB0b28KICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgIGlmIChkcmFnZ2VkKSB7CiAgICAgIGNvbnRhaW5lci5zdHlsZS50b3AgPSAoZXZlbnQuY2xpZW50WSArIHN0YXJ0WSkgKyAicHgiOwogICAgICBjb250YWluZXIuc3R5bGUubGVmdCA9IChldmVudC5jbGllbnRYICsgc3RhcnRYKSArICJweCI7CiAgICB9CiAgICB2YXIgeCA9IE51bWJlcihjb250YWluZXIuc3R5bGUubGVmdC5zbGljZSgwLCAtMikpOwogICAgdmFyIHkgPSBOdW1iZXIoY29udGFpbmVyLnN0eWxlLnRvcC5zbGljZSgwLCAtMikpOwogICAgaWYgKHggPCAwKSB7CiAgICAgIGNvbnRhaW5lci5zdHlsZS5sZWZ0ID0gIjBweCI7CiAgICB9CiAgICBpZiAoeSA8IDApIHsKICAgICAgY29udGFpbmVyLnN0eWxlLnRvcCA9ICIwcHgiOwogICAgfQoKICAgIGNvbnRlbnRIb2xkZXIuc3R5bGUuaGVpZ2h0ID0gaUZyYW1lLnN0eWxlLmhlaWdodDsKICAgIGNvbnRlbnRIb2xkZXIuc3R5bGUud2lkdGggPSBpRnJhbWUuc3R5bGUud2lkdGg7CgogICAgaGVhZGVyLnN0eWxlLndpZHRoID0gKE51bWJlcihjb250ZW50SG9sZGVyLnN0eWxlLndpZHRoLnNsaWNlKDAsIC0yKSkgLSA2KSArICJweCI7CgogICAgY29udGFpbmVyLnN0eWxlLndpZHRoID0gY29udGVudEhvbGRlci5zdHlsZS53aWR0aDsKICAgIGNvbnRhaW5lci5zdHlsZS5oZWlnaHQgPSAoTnVtYmVyKGNvbnRlbnRIb2xkZXIuc3R5bGUuaGVpZ2h0LnNsaWNlKDAsIC0yKSkgKyAyNykgKyAicHgiOwoKICAgIGlmKE51bWJlcihoZWFkZXIuc3R5bGUud2lkdGguc2xpY2UoMCwgLTIpKSA8IDMwMCl7CiAgICBjb250ZW50SG9sZGVyLnN0eWxlLndpZHRoID0gIjMwMHB4IjsKICAgIGhlYWRlci5zdHlsZS53aWR0aCA9ICIyOTRweCI7CiAgICBjb250YWluZXIuc3R5bGUud2lkdGggPSAiMzAwcHgiOwogICAgaUZyYW1lLnN0eWxlLndpZHRoID0gIjMwMHB4IjsKICAgIH0KICB9KTsKCiAgLy8gdGV4dCBzdHVmZgogIHZhciBoZWFkZXJUZXh0SG9sZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CgogIGhlYWRlclRleHRIb2xkZXIuc3R5bGUuYWxsID0gInVuc2V0IjsKCiAgLy8gaGVhZGVyIHRleHQKICB2YXIgaGVhZGVyVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImgxIik7CiAgaGVhZGVyVGV4dC50ZXh0Q29udGVudCA9ICJMaW5rIFZpZXdlciI7CgogIGhlYWRlclRleHQuc3R5bGUuYWxsID0gInVuc2V0IjsKCiAgaGVhZGVyVGV4dC5zdHlsZS5mb250RmFtaWx5ID0gInNhbnMtc2VyaWYiOwogIGhlYWRlclRleHQuc3R5bGUuY29sb3IgPSAiIzQ0NCI7CiAgaGVhZGVyVGV4dC5zdHlsZS5mb250U2l6ZSA9ICIyMHB4IjsKICBoZWFkZXJUZXh0LnN0eWxlLm1hcmdpbiA9ICIwcHgiOwogIGhlYWRlclRleHQuc3R5bGUucGFkZGluZyA9ICIwcHgiOwoKICBoZWFkZXJUZXh0SG9sZGVyLmFwcGVuZChoZWFkZXJUZXh0KTsKICBoZWFkZXIuYXBwZW5kKGhlYWRlclRleHRIb2xkZXIpOwoKICAvLyBidXR0b24gc3R1ZmYgCiAgdmFyIGhlYWRlckJ1dHRvbkhvbGRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwoKICBoZWFkZXJCdXR0b25Ib2xkZXIuc3R5bGUuYWxsID0gInVuc2V0IjsKCiAgLy8gbGluayBidXR0b24KICB2YXIgbEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpOwogIGxCdXR0b24udGV4dENvbnRlbnQgPSAicnVuIHVybCI7CgogIGxCdXR0b24uc3R5bGUuYWxsID0gInVuc2V0IjsKCiAgbEJ1dHRvbi5zdHlsZS5mb250RmFtaWx5ID0gInNhbnMtc2VyaWYiOwogIGxCdXR0b24uc3R5bGUud2lkdGggPSAiMTAwcHgiOwogIGxCdXR0b24uc3R5bGUuaGVpZ2h0ID0gIjIwcHgiOwogIGxCdXR0b24uc3R5bGUuY3Vyc29yID0gInBvaW50ZXIiOwogIGxCdXR0b24uc3R5bGUubWFyZ2luID0gIjBweCAzcHggMHB4IDNweCI7CiAgbEJ1dHRvbi5zdHlsZS5jb2xvciA9ICIjMzMzIjsKICBsQnV0dG9uLnN0eWxlLmJvcmRlciA9ICJzb2xpZCAxcHggIzMzMyI7CiAgbEJ1dHRvbi5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiMnB4IjsKICBsQnV0dG9uLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjRUVFIjsKICBsQnV0dG9uLnN0eWxlLnRleHRBbGlnbiA9ICJjZW50ZXIiOwoKICBsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgICBsQnV0dG9uLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjREREIjsKICB9KTsKICBsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlbGVhdmUiLCBmdW5jdGlvbihldmVudCkgewogICAgbEJ1dHRvbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI0VFRSI7CiAgfSk7CiAgbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgIAoKICAgIGlGcmFtZS5zcmMgPSB1cmw7CiAgfSk7CgogIGhlYWRlckJ1dHRvbkhvbGRlci5hcHBlbmQobEJ1dHRvbik7CgogIC8vIG1pbmltaXplIGJ1dHRvbgogIHZhciBtQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7CiAgbUJ1dHRvbi50ZXh0Q29udGVudCA9ICItIjsKCiAgbUJ1dHRvbi5zdHlsZS5hbGwgPSAidW5zZXQiOwoKICBtQnV0dG9uLnN0eWxlLmZvbnRGYW1pbHkgPSAic2Fucy1zZXJpZiI7CiAgbUJ1dHRvbi5zdHlsZS53aWR0aCA9ICIyMHB4IjsKICBtQnV0dG9uLnN0eWxlLmhlaWdodCA9ICIyMHB4IjsKICBtQnV0dG9uLnN0eWxlLmN1cnNvciA9ICJwb2ludGVyIjsKICBtQnV0dG9uLnN0eWxlLm1hcmdpbiA9ICIwcHggM3B4IDBweCAzcHgiOwogIG1CdXR0b24uc3R5bGUuY29sb3IgPSAiIzMzMyI7CiAgbUJ1dHRvbi5zdHlsZS5ib3JkZXIgPSAic29saWQgMXB4ICMzMzMiOwogIG1CdXR0b24uc3R5bGUuYm9yZGVyUmFkaXVzID0gIjJweCI7CiAgbUJ1dHRvbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI0VFRSI7CiAgbUJ1dHRvbi5zdHlsZS50ZXh0QWxpZ24gPSAiY2VudGVyIjsKCiAgbUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbihldmVudCkgewogICAgbUJ1dHRvbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI0RERCI7CiAgfSk7CiAgbUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWxlYXZlIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgIG1CdXR0b24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNFRUUiOwogIH0pOwogIG1CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCBmdW5jdGlvbihldmVudCkgewogICAgdmFyIGNsb3NlZCA9IGNvbnRlbnRIb2xkZXIuc3R5bGUuZGlzcGxheSA9PT0gIm5vbmUiOwogICAgaWYgKGNsb3NlZCkgewogICAgICBjb250ZW50SG9sZGVyLnN0eWxlLmRpc3BsYXkgPSAiYmxvY2siOwogICAgICBoZWFkZXIuc3R5bGUuYm9yZGVyQm90dG9tID0gInNvbGlkIDFweCAjQUFBIjsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnRlbnRIb2xkZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgaGVhZGVyLnN0eWxlLmJvcmRlckJvdHRvbSA9ICJub25lIjsKICAgIH0KICB9KTsKCiAgaGVhZGVyQnV0dG9uSG9sZGVyLmFwcGVuZChtQnV0dG9uKTsKCiAgLy8geCBidXR0b24KICB2YXIgeEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpOwogIHhCdXR0b24udGV4dENvbnRlbnQgPSAieCI7CgogIHhCdXR0b24uc3R5bGUuYWxsID0gInVuc2V0IjsKCiAgeEJ1dHRvbi5zdHlsZS5mb250RmFtaWx5ID0gInNhbnMtc2VyaWYiOwogIHhCdXR0b24uc3R5bGUud2lkdGggPSAiMjBweCI7CiAgeEJ1dHRvbi5zdHlsZS5oZWlnaHQgPSAiMjBweCI7CiAgeEJ1dHRvbi5zdHlsZS5jdXJzb3IgPSAicG9pbnRlciI7CiAgeEJ1dHRvbi5zdHlsZS5tYXJnaW4gPSAiMHB4IDNweCAwcHggM3B4IjsKICB4QnV0dG9uLnN0eWxlLmNvbG9yID0gIiMzMzMiOwogIHhCdXR0b24uc3R5bGUuYm9yZGVyID0gInNvbGlkIDFweCAjMzMzIjsKICB4QnV0dG9uLnN0eWxlLmJvcmRlclJhZGl1cyA9ICIycHgiOwogIHhCdXR0b24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNGMzMiOwogIHhCdXR0b24uc3R5bGUudGV4dEFsaWduID0gImNlbnRlciI7CgogIHhCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgIHhCdXR0b24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNFMjIiOwogIH0pOwogIHhCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcigibW91c2VsZWF2ZSIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgICB4QnV0dG9uLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjRjMzIjsKICB9KTsKICB4QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgIGNvbnRhaW5lci5yZW1vdmUoKTsKICB9KTsKCiAgaGVhZGVyQnV0dG9uSG9sZGVyLmFwcGVuZCh4QnV0dG9uKTsKICBoZWFkZXIuYXBwZW5kKGhlYWRlckJ1dHRvbkhvbGRlcik7CgogIGNvbnRlbnRIb2xkZXIuYmVmb3JlKGhlYWRlcik7CgogIC8vIGFkZCB0byBib2R5CiAgZG9jdW1lbnQuYm9keSA9IGRvY3VtZW50LmJvZHkgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYm9keSIpOwogIGRvY3VtZW50LmJvZHkuYXBwZW5kKGNvbnRhaW5lcik7Cn0pKCk7CiB9CnZhcgpoaXN0TGlzdCA9IFsiIl0sCmhpc3RQb3MgPSAwLApfc2NvcGUgPSB7fSwKX3dpbiwgLy8gYSB0b3AtbGV2ZWwgY29udGV4dApxdWVzdGlvbiwKX2luLApfb3V0LAp0b29NYW55TWF0Y2hlcyA9IG51bGwsCmxhc3RFcnJvciA9IG51bGw7CgpmdW5jdGlvbiByZWZvY3VzKCkKewogIF9pbi5ibHVyKCk7IC8vIE5lZWRlZCBmb3IgTW96aWxsYSB0byBzY3JvbGwgY29ycmVjdGx5LgogIF9pbi5mb2N1cygpOwp9CgpmdW5jdGlvbiBpbml0KCkKewogIF9pbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJpbnB1dCIpOwogIF9vdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgib3V0cHV0Iik7CgogIF93aW4gPSB3aW5kb3c7CgogIGlmIChvcGVuZXIgJiYgIW9wZW5lci5jbG9zZWQpCiAgewogICAgcHJpbnRsbigiVXNpbmcgYm9va21hcmtsZXQgdmVyc2lvbiBvZiBzaGVsbDogY29tbWFuZHMgd2lsbCBydW4gaW4gb3BlbmVyJ3MgY29udGV4dC4iLCAibWVzc2FnZSIpOwogICAgX3dpbiA9IHdpbmRvdzsKICB9CgogIGluaXRUYXJnZXQoKTsKCiAgcmVjYWxjdWxhdGVJbnB1dEhlaWdodCgpOwogIHJlZm9jdXMoKTsKfQoKZnVuY3Rpb24gaW5pdFRhcmdldCgpCnsKICBfd2luLlNoZWxsID0gd2luZG93OwogIF93aW4ucHJpbnQgPSBzaGVsbENvbW1hbmRzLnByaW50Owp9CgoKLy8gVW5sZXNzIHRoZSB1c2VyIGlzIHNlbGVjdGVkIHNvbWV0aGluZywgcmVmb2N1cyB0aGUgdGV4dGJveC4KLy8gKHJlcXVlc3RlZCBieSBjYWlsbG9uLCBicmVuZGFuLCBhc2EpCmZ1bmN0aW9uIGtlZXBGb2N1c0luVGV4dGJveChlKQp7CiAgdmFyIGcgPSBlLnNyY0VsZW1lbnQgPyBlLnNyY0VsZW1lbnQgOiBlLnRhcmdldDsgLy8gSUUgdnMuIHN0YW5kYXJkCgogIHdoaWxlICghZy50YWdOYW1lKQogICAgZyA9IGcucGFyZW50Tm9kZTsKICB2YXIgdCA9IGcudGFnTmFtZS50b1VwcGVyQ2FzZSgpOwogIGlmICh0PT0iQSIgfHwgdD09IklOUFVUIikKICAgIHJldHVybjsKCiAgaWYgKHdpbmRvdy5nZXRTZWxlY3Rpb24pIHsKICAgIC8vIE1vemlsbGEKICAgIGlmIChTdHJpbmcod2luZG93LmdldFNlbGVjdGlvbigpKSkKICAgICAgcmV0dXJuOwogIH0KICBlbHNlIGlmIChkb2N1bWVudC5nZXRTZWxlY3Rpb24pIHsKICAgIC8vIE9wZXJhPyBOZXRzY2FwZSA0PwogICAgaWYgKGRvY3VtZW50LmdldFNlbGVjdGlvbigpKQogICAgICByZXR1cm47CiAgfQogIGVsc2UgewogICAgLy8gSUUKICAgIGlmICggZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCkudGV4dCApCiAgICAgIHJldHVybjsKICB9CgogIHJlZm9jdXMoKTsKfQoKZnVuY3Rpb24gaW5wdXRLZXlkb3duKGUpIHsKICAvLyBVc2Ugb25rZXlkb3duIGJlY2F1c2UgSUUgZG9lc24ndCBzdXBwb3J0IG9ua2V5cHJlc3MgZm9yIGFycm93IGtleXMKCiAgLy9hbGVydChlLmtleUNvZGUgKyAiIF4gIiArIGUua2V5Y29kZSk7CgogIGlmIChlLnNoaWZ0S2V5ICYmIGUua2V5Q29kZSA9PSAxMykgeyAvLyBzaGlmdC1lbnRlcgogICAgLy8gZG9uJ3QgZG8gYW55dGhpbmc7IGFsbG93IHRoZSBzaGlmdC1lbnRlciB0byBpbnNlcnQgYSBsaW5lIGJyZWFrIGFzIG5vcm1hbAogIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09IDEzKSB7IC8vIGVudGVyCiAgICAvLyBleGVjdXRlIHRoZSBpbnB1dCBvbiBlbnRlcgogICAgdHJ5IHsgZ28oKTsgfSBjYXRjaChlcikgeyBhbGVydChlcik7IH07CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyBfaW4udmFsdWUgPSAiIjsgfSwgMCk7IC8vIGNhbid0IHByZXZlbnREZWZhdWx0IG9uIGlucHV0LCBzbyBjbGVhciBpdCBsYXRlcgogIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09IDM4KSB7IC8vIHVwCiAgICAvLyBnbyB1cCBpbiBoaXN0b3J5IGlmIGF0IHRvcCBvciBjdHJsLXVwCiAgICBpZiAoZS5jdHJsS2V5IHx8IGNhcmV0SW5GaXJzdExpbmUoX2luKSkKICAgICAgaGlzdCh0cnVlKTsKICB9IGVsc2UgaWYgKGUua2V5Q29kZSA9PSA0MCkgeyAvLyBkb3duCiAgICAvLyBnbyBkb3duIGluIGhpc3RvcnkgaWYgYXQgZW5kIG9yIGN0cmwtZG93bgogICAgaWYgKGUuY3RybEtleSB8fCBjYXJldEluTGFzdExpbmUoX2luKSkKICAgICAgaGlzdChmYWxzZSk7CiAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT0gOSkgeyAvLyB0YWIKICAgIHRhYmNvbXBsZXRlKCk7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyByZWZvY3VzKCk7IH0sIDApOyAvLyByZWZvY3VzIGJlY2F1c2UgdGFiIHdhcyBoaXQKICB9IGVsc2UgeyB9CgogIHNldFRpbWVvdXQocmVjYWxjdWxhdGVJbnB1dEhlaWdodCwgMCk7CgogIC8vcmV0dXJuIHRydWU7Cn07CgpmdW5jdGlvbiBjYXJldEluRmlyc3RMaW5lKHRleHRib3gpCnsKICAvLyBJRSBkb2Vzbid0IHN1cHBvcnQgc2VsZWN0aW9uU3RhcnQvc2VsZWN0aW9uRW5kCiAgaWYgKHRleHRib3guc2VsZWN0aW9uU3RhcnQgPT0gdW5kZWZpbmVkKQogICAgcmV0dXJuIHRydWU7CgogIHZhciBmaXJzdExpbmVCcmVhayA9IHRleHRib3gudmFsdWUuaW5kZXhPZigiXG4iKTsKCiAgcmV0dXJuICgoZmlyc3RMaW5lQnJlYWsgPT0gLTEpIHx8ICh0ZXh0Ym94LnNlbGVjdGlvblN0YXJ0IDw9IGZpcnN0TGluZUJyZWFrKSk7Cn0KCmZ1bmN0aW9uIGNhcmV0SW5MYXN0TGluZSh0ZXh0Ym94KQp7CiAgLy8gSUUgZG9lc24ndCBzdXBwb3J0IHNlbGVjdGlvblN0YXJ0L3NlbGVjdGlvbkVuZAogIGlmICh0ZXh0Ym94LnNlbGVjdGlvbkVuZCA9PSB1bmRlZmluZWQpCiAgICByZXR1cm4gdHJ1ZTsKCiAgdmFyIGxhc3RMaW5lQnJlYWsgPSB0ZXh0Ym94LnZhbHVlLmxhc3RJbmRleE9mKCJcbiIpOwoKICByZXR1cm4gKHRleHRib3guc2VsZWN0aW9uRW5kID4gbGFzdExpbmVCcmVhayk7Cn0KCmZ1bmN0aW9uIHJlY2FsY3VsYXRlSW5wdXRIZWlnaHQoKQp7CiAgdmFyIHJvd3MgPSBfaW4udmFsdWUuc3BsaXQoL1xuLykubGVuZ3RoCiAgICArIDEgLy8gcHJldmVudCBzY3JvbGxiYXIgZmxpY2tlcmluZyBpbiBNb3ppbGxhCiAgICArICh3aW5kb3cub3BlcmEgPyAxIDogMCk7IC8vIGxlYXZlIHJvb20gZm9yIHNjcm9sbGJhciBpbiBPcGVyYQoKICBpZiAoX2luLnJvd3MgIT0gcm93cykgLy8gd2l0aG91dCB0aGlzIGNoZWNrLCBpdCBpcyBpbXBvc3NpYmxlIHRvIHNlbGVjdCB0ZXh0IGluIE9wZXJhIDcuNjAgb3IgT3BlcmEgOC4wLgogICAgX2luLnJvd3MgPSByb3dzOwp9CgpmdW5jdGlvbiBwcmludGxuKHMsIHR5cGUpCnsKICBpZigocz1TdHJpbmcocykpKQogIHsKICAgIHZhciBuZXdkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIG5ld2Rpdi5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzKSk7CiAgICBuZXdkaXYuY2xhc3NOYW1lID0gdHlwZTsKICAgIF9vdXQuYXBwZW5kQ2hpbGQobmV3ZGl2KTsKICAgIHJldHVybiBuZXdkaXY7CiAgfQp9CgpmdW5jdGlvbiBwcmludFdpdGhSdW5pbihoLCBzLCB0eXBlKQp7CiAgdmFyIGRpdiA9IHByaW50bG4ocywgdHlwZSk7CiAgdmFyIGhlYWQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHJvbmciKTsKICBoZWFkLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGggKyAiOiAiKSk7CiAgZGl2Lmluc2VydEJlZm9yZShoZWFkLCBkaXYuZmlyc3RDaGlsZCk7Cn0KCgp2YXIgc2hlbGxDb21tYW5kcyA9CnsKbG9hZCA6IGZ1bmN0aW9uIGxvYWQodXJsKQp7CiAgdmFyIHMgPSBfd2luLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwogIHMudHlwZSA9ICJ0ZXh0L2phdmFzY3JpcHQiOwogIHMuc3JjID0gdXJsOwogIF93aW4uZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImhlYWQiKVswXS5hcHBlbmRDaGlsZChzKTsKICBwcmludGxuKCJMb2FkaW5nICIgKyB1cmwgKyAiLi4uIiwgIm1lc3NhZ2UiKTsKfSwKCmNsZWFyIDogZnVuY3Rpb24gY2xlYXIoKQp7CiAgdmFyIENISUxEUkVOX1RPX1BSRVNFUlZFID0gMzsKICB3aGlsZSAoX291dC5jaGlsZE5vZGVzW0NISUxEUkVOX1RPX1BSRVNFUlZFXSkKICAgIF9vdXQucmVtb3ZlQ2hpbGQoX291dC5jaGlsZE5vZGVzW0NISUxEUkVOX1RPX1BSRVNFUlZFXSk7Cn0sCgpwcmludCA6IGZ1bmN0aW9uIHByaW50KHMpIHsgcHJpbnRsbihzLCAicHJpbnQiKTsgfSwKCi8vIHRoZSBub3JtYWwgZnVuY3Rpb24sICJwcmludCIsIHNob3VsZG4ndCByZXR1cm4gYSB2YWx1ZQovLyAoc3VnZ2VzdGVkIGJ5IGJyZW5kYW47IGxhdGVyIG5vdGljZWQgaXQgd2FzIGEgcHJvYmxlbSB3aGVuIHNob3dpbmcgb3RoZXJzKQpwciA6IGZ1bmN0aW9uIHByKHMpCnsKICBzaGVsbENvbW1hbmRzLnByaW50KHMpOyAvLyBuZWVkIHRvIHNwZWNpZnkgc2hlbGxDb21tYW5kcyBzbyBpdCBkb2Vzbid0IHRyeSB3aW5kb3cucHJpbnQoKSEKICByZXR1cm4gczsKfSwKCnByb3BzIDogZnVuY3Rpb24gcHJvcHMoZSwgb25lUGVyTGluZSkKewogIGlmIChlID09PSBudWxsKSB7CiAgICBwcmludGxuKCJwcm9wcyBjYWxsZWQgd2l0aCBudWxsIGFyZ3VtZW50IiwgImVycm9yIik7CiAgICByZXR1cm47CiAgfQoKICBpZiAoZSA9PT0gdW5kZWZpbmVkKSB7CiAgICBwcmludGxuKCJwcm9wcyBjYWxsZWQgd2l0aCB1bmRlZmluZWQgYXJndW1lbnQiLCAiZXJyb3IiKTsKICAgIHJldHVybjsKICB9CgogIHZhciBucyA9IFsiTWV0aG9kcyIsICJGaWVsZHMiLCAiVW5yZWFjaGFibGVzIl07CiAgdmFyIGFzID0gW1tdLCBbXSwgW11dOyAvLyBhcnJheSBvZiAoZW1wdHkpIGFycmF5cyBvZiBhcnJheXMhCiAgdmFyIHAsIGosIGk7IC8vIGxvb3AgdmFyaWFibGVzLCBzZXZlcmFsIHVzZWQgbXVsdGlwbGUgdGltZXMKCiAgdmFyIHByb3RvTGV2ZWxzID0gMDsKCiAgZm9yIChwID0gZTsgcDsgcCA9IHAuX19wcm90b19fKQogIHsKICAgIGZvciAoaT0wOyBpPG5zLmxlbmd0aDsgKytpKQogICAgICBhc1tpXVtwcm90b0xldmVsc10gPSBbXTsKICAgICsrcHJvdG9MZXZlbHM7CiAgfQoKICBmb3IodmFyIGEgaW4gZSkKICB7CiAgICAvLyBTaG9ydGNvbWluZzogZG9lc24ndCBjaGVjayB0aGF0IFZBTFVFUyBhcmUgdGhlIHNhbWUgaW4gb2JqZWN0IGFuZCBwcm90b3R5cGUuCgogICAgdmFyIHByb3RvTGV2ZWwgPSAtMTsKICAgIHRyeQogICAgewogICAgICBmb3IgKHAgPSBlOyBwICYmIChhIGluIHApOyBwID0gcC5fX3Byb3RvX18pCiAgICAgICAgKytwcm90b0xldmVsOwogICAgfQogICAgY2F0Y2goZXIpIHsgcHJvdG9MZXZlbCA9IDA7IH0gLy8gImluIiBvcGVyYXRvciB0aHJvd3Mgd2hlbiBwYXJhbSB0byBwcm9wcygpIGlzIGEgc3RyaW5nCgogICAgdmFyIHR5cGUgPSAxOwogICAgdHJ5CiAgICB7CiAgICAgIGlmICgodHlwZW9mIGVbYV0pID09ICJmdW5jdGlvbiIpCiAgICAgICAgdHlwZSA9IDA7CiAgICB9CiAgICBjYXRjaCAoZXIpIHsgdHlwZSA9IDI7IH0KCiAgICBhc1t0eXBlXVtwcm90b0xldmVsXS5wdXNoKGEpOwogIH0KCiAgZnVuY3Rpb24gdGltZXMocywgbikgeyByZXR1cm4gbiA/IHMgKyB0aW1lcyhzLCBuLTEpIDogIiI7IH0KCiAgZm9yIChqPTA7IGo8cHJvdG9MZXZlbHM7ICsraikKICAgIGZvciAoaT0wO2k8bnMubGVuZ3RoOysraSkKICAgICAgaWYgKGFzW2ldW2pdLmxlbmd0aCkKICAgICAgICBwcmludFdpdGhSdW5pbigKICAgICAgICAgIG5zW2ldICsgdGltZXMoIiBvZiBwcm90b3R5cGUiLCBqKSwKICAgICAgICAgIChvbmVQZXJMaW5lID8gIlxuXG4iIDogIiIpICsgYXNbaV1bal0uc29ydCgpLmpvaW4ob25lUGVyTGluZSA/ICJcbiIgOiAiLCAiKSArIChvbmVQZXJMaW5lID8gIlxuXG4iIDogIiIpLAogICAgICAgICAgInByb3BMaXN0IgogICAgICAgICk7Cn0sCgpibGluayA6IGZ1bmN0aW9uIGJsaW5rKG5vZGUpCnsKICBpZiAoIW5vZGUpICAgICAgICAgICAgICAgICAgICAgdGhyb3coImJsaW5rOiBhcmd1bWVudCBpcyBudWxsIG9yIHVuZGVmaW5lZC4iKTsKICBpZiAobm9kZS5ub2RlVHlwZSA9PSBudWxsKSAgICAgdGhyb3coImJsaW5rOiBhcmd1bWVudCBtdXN0IGJlIGEgbm9kZS4iKTsKICBpZiAobm9kZS5ub2RlVHlwZSA9PSAzKSAgICAgICAgdGhyb3coImJsaW5rOiBhcmd1bWVudCBtdXN0IG5vdCBiZSBhIHRleHQgbm9kZSIpOwogIGlmIChub2RlLmRvY3VtZW50RWxlbWVudCkgICAgICB0aHJvdygiYmxpbms6IGFyZ3VtZW50IG11c3Qgbm90IGJlIHRoZSBkb2N1bWVudCBvYmplY3QiKTsKCiAgZnVuY3Rpb24gc2V0T3V0bGluZShvKSB7CiAgICByZXR1cm4gZnVuY3Rpb24oKSB7CiAgICAgIGlmIChub2RlLnN0eWxlLm91dGxpbmUgIT0gbm9kZS5zdHlsZS5ib2d1c1Byb3BlcnR5KSB7CiAgICAgICAgLy8gYnJvd3NlciBzdXBwb3J0cyBvdXRsaW5lIChGaXJlZm94IDEuMSBhbmQgbmV3ZXIsIENTUzMsIE9wZXJhIDgpLgogICAgICAgIG5vZGUuc3R5bGUub3V0bGluZSA9IG87CiAgICAgIH0KICAgICAgZWxzZSBpZiAobm9kZS5zdHlsZS5Nb3pPdXRsaW5lICE9IG5vZGUuc3R5bGUuYm9ndXNQcm9wZXJ0eSkgewogICAgICAgIC8vIGJyb3dzZXIgc3VwcG9ydHMgTW96T3V0bGluZSAoRmlyZWZveCAxLjAueCBhbmQgb2xkZXIpCiAgICAgICAgbm9kZS5zdHlsZS5Nb3pPdXRsaW5lID0gbzsKICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICAvLyBicm93c2VyIG9ubHkgc3VwcG9ydHMgYm9yZGVyIChJRSkuIGJvcmRlciBpcyBhIGZhbGxiYWNrIGJlY2F1c2UgaXQgbW92ZXMgdGhpbmdzIGFyb3VuZC4KICAgICAgICBub2RlLnN0eWxlLmJvcmRlciA9IG87CiAgICAgIH0KICAgIH0KICB9CgogIGZ1bmN0aW9uIGZvY3VzSXQoYSkgewogICAgcmV0dXJuIGZ1bmN0aW9uKCkgewogICAgICBhLmZvY3VzKCk7CiAgICB9CiAgfQoKICBpZiAobm9kZS5vd25lckRvY3VtZW50KSB7CiAgICB2YXIgd2luZG93VG9Gb2N1c05vdyA9IChub2RlLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgbm9kZS5vd25lckRvY3VtZW50LnBhcmVudFdpbmRvdyk7IC8vIE1veiB2cy4gSUUKICAgIGlmICh3aW5kb3dUb0ZvY3VzTm93KQogICAgICBzZXRUaW1lb3V0KGZvY3VzSXQod2luZG93VG9Gb2N1c05vdy50b3ApLCAwKTsKICB9CgogIGZvcih2YXIgaT0xO2k8NzsrK2kpCiAgICBzZXRUaW1lb3V0KHNldE91dGxpbmUoKGklMik/JzNweCBzb2xpZCByZWQnOidub25lJyksIGkqMTAwKTsKCiAgc2V0VGltZW91dChmb2N1c0l0KHdpbmRvdyksIDgwMCk7CiAgc2V0VGltZW91dChmb2N1c0l0KF9pbiksIDgxMCk7Cn0sCgpzY29wZSA6IGZ1bmN0aW9uIHNjb3BlKHNjKQp7CiAgaWYgKCFzYykgc2MgPSB7fTsKICBfc2NvcGUgPSBzYzsKICBwcmludGxuKCJTY29wZSBpcyBub3cgIiArIHNjICsgIi4gIElmIGEgdmFyaWFibGUgaXMgbm90IGZvdW5kIGluIHRoaXMgc2NvcGUsIHdpbmRvdyB3aWxsIGFsc28gYmUgc2VhcmNoZWQuICBOZXcgdmFyaWFibGVzIHdpbGwgc3RpbGwgZ28gb24gd2luZG93LiIsICJtZXNzYWdlIik7Cn0sCgptYXRoSGVscCA6IGZ1bmN0aW9uIG1hdGhIZWxwKCkKewogIHByaW50V2l0aFJ1bmluKCJNYXRoIGNvbnN0YW50cyIsICJFLCBMTjIsIExOMTAsIExPRzJFLCBMT0cxMEUsIFBJLCBTUVJUMV8yLCBTUVJUMiIsICJwcm9wTGlzdCIpOwogIHByaW50V2l0aFJ1bmluKCJNYXRoIG1ldGhvZHMiLCAiYWJzLCBhY29zLCBhc2luLCBhdGFuLCBhdGFuMiwgY2VpbCwgY29zLCBleHAsIGZsb29yLCBsb2csIG1heCwgbWluLCBwb3csIHJhbmRvbSwgcm91bmQsIHNpbiwgc3FydCwgdGFuIiwgInByb3BMaXN0Iik7Cn0sCgphbnMgOiB1bmRlZmluZWQKfTsKCgpmdW5jdGlvbiBoaXN0KHVwKQp7CiAgLy8gaGlzdExpc3RbMF0gPSBmaXJzdCBjb21tYW5kIGVudGVyZWQsIFsxXSA9IHNlY29uZCwgZXRjLgogIC8vIHR5cGUgc29tZXRoaW5nLCBwcmVzcyB1cCAtLT4gdGhpbmcgdHlwZWQgaXMgbm93IGluICJsaW1ibyIKICAvLyAobGFzdCBpdGVtIGluIGhpc3RMaXN0KSBhbmQgc2hvdWxkIGJlIHJlYWNoYWJsZSBieSBwcmVzc2luZwogIC8vIGRvd24gYWdhaW4uCgogIHZhciBMID0gaGlzdExpc3QubGVuZ3RoOwoKICBpZiAoTCA9PSAxKQogICAgcmV0dXJuOwoKICBpZiAodXApCiAgewogICAgaWYgKGhpc3RQb3MgPT0gTC0xKQogICAgewogICAgICAvLyBTYXZlIHRoaXMgZW50cnkgaW4gY2FzZSB0aGUgdXNlciBoaXRzIHRoZSBkb3duIGtleS4KICAgICAgaGlzdExpc3RbaGlzdFBvc10gPSBfaW4udmFsdWU7CiAgICB9CgogICAgaWYgKGhpc3RQb3MgPiAwKQogICAgewogICAgICBoaXN0UG9zLS07CiAgICAgIC8vIFVzZSBhIHRpbWVvdXQgdG8gcHJldmVudCB1cCBmcm9tIG1vdmluZyBjdXJzb3Igd2l0aGluIG5ldyB0ZXh0CiAgICAgIC8vIFNldCB0byBub3RoaW5nIGZpcnN0IGZvciB0aGUgc2FtZSByZWFzb24KICAgICAgc2V0VGltZW91dCgKICAgICAgICBmdW5jdGlvbigpIHsKICAgICAgICAgIF9pbi52YWx1ZSA9ICcnOwogICAgICAgICAgX2luLnZhbHVlID0gaGlzdExpc3RbaGlzdFBvc107CiAgICAgICAgICB2YXIgY2FyZXRQb3MgPSBfaW4udmFsdWUubGVuZ3RoOwogICAgICAgICAgaWYgKF9pbi5zZXRTZWxlY3Rpb25SYW5nZSkKICAgICAgICAgICAgX2luLnNldFNlbGVjdGlvblJhbmdlKGNhcmV0UG9zLCBjYXJldFBvcyk7CiAgICAgICAgfSwKICAgICAgICAwCiAgICAgICk7CiAgICB9CiAgfQogIGVsc2UgLy8gZG93bgogIHsKICAgIGlmIChoaXN0UG9zIDwgTC0xKQogICAgewogICAgICBoaXN0UG9zKys7CiAgICAgIF9pbi52YWx1ZSA9IGhpc3RMaXN0W2hpc3RQb3NdOwogICAgfQogICAgZWxzZSBpZiAoaGlzdFBvcyA9PSBMLTEpCiAgICB7CiAgICAgIC8vIEFscmVhZHkgb24gdGhlIGN1cnJlbnQgZW50cnk6IGNsZWFyIGJ1dCBzYXZlCiAgICAgIGlmIChfaW4udmFsdWUpCiAgICAgIHsKICAgICAgICBoaXN0TGlzdFtoaXN0UG9zXSA9IF9pbi52YWx1ZTsKICAgICAgICArK2hpc3RQb3M7CiAgICAgICAgX2luLnZhbHVlID0gIiI7CiAgICAgIH0KICAgIH0KICB9Cn0KCmZ1bmN0aW9uIHRhYmNvbXBsZXRlKCkKewogIC8qCiAgICogV29ya2luZyBiYWNrd2FyZHMgZnJvbSBzW2Zyb21dLCBmaW5kIHRoZSBzcG90CiAgICogd2hlcmUgdGhpcyBleHByZXNzaW9uIHN0YXJ0cy4gIEl0IHdpbGwgc2NhbgogICAqIHVudGlsIGl0IGhpdHMgYSBtaXNtYXRjaGVkICggb3IgYSBzcGFjZSwKICAgKiBidXQgaXQgc2tpcHMgb3ZlciBxdW90ZWQgc3RyaW5ncy4KICAgKiBJZiBzdG9wQXREb3QgaXMgdHJ1ZSwgc3RvcCBhdCBhICcuJwogICAqLwogIGZ1bmN0aW9uIGZpbmRiZWdpbm5pbmcocywgZnJvbSwgc3RvcEF0RG90KQogIHsKICAgIC8qCiAgICAgKiAgQ29tcGxpY2F0ZWQgZnVuY3Rpb24uCiAgICAgKgogICAgICogIFJldHVybiB0cnVlIGlmIHNbaV0gPT0gcSBCVVQgT05MWSBJRgogICAgICogIHNbaS0xXSBpcyBub3QgYSBiYWNrc2xhc2guCiAgICAgKi8KICAgIGZ1bmN0aW9uIGVxdWFsQnV0Tm90RXNjYXBlZChzLGkscSkKICAgIHsKICAgICAgaWYocy5jaGFyQXQoaSkgIT0gcSkgLy8gbm90IGVxdWFsIGdvIG5vIGZ1cnRoZXIKICAgICAgICByZXR1cm4gZmFsc2U7CgogICAgICBpZihpPT0wKSAvLyBiZWdpbm5pbmcgb2Ygc3RyaW5nCiAgICAgICAgcmV0dXJuIHRydWU7CgogICAgICBpZihzLmNoYXJBdChpLTEpID09ICdcXCcpIC8vIGVzY2FwZWQ/CiAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgdmFyIG5wYXJlbnMgPSAwOwogICAgdmFyIGk7CiAgICBmb3IoaT1mcm9tOyBpPj0wOyBpLS0pCiAgICB7CiAgICAgIGlmKHMuY2hhckF0KGkpID09ICcgJykKICAgICAgICBicmVhazsKCiAgICAgIGlmKHN0b3BBdERvdCAmJiBzLmNoYXJBdChpKSA9PSAnLicpCiAgICAgICAgYnJlYWs7CgogICAgICBpZihzLmNoYXJBdChpKSA9PSAnKScpCiAgICAgICAgbnBhcmVucysrOwogICAgICBlbHNlIGlmKHMuY2hhckF0KGkpID09ICcoJykKICAgICAgICBucGFyZW5zLS07CgogICAgICBpZihucGFyZW5zIDwgMCkKICAgICAgICBicmVhazsKCiAgICAgIC8vIHNraXAgcXVvdGVkIHN0cmluZ3MKICAgICAgaWYocy5jaGFyQXQoaSkgPT0gJ1wnJyB8fCBzLmNoYXJBdChpKSA9PSAnXCInKQogICAgICB7CiAgICAgICAgLy9kdW1wKCJza2lwcGluZyBxdW90ZWQgY2hhcnM6ICIpOwogICAgICAgIHZhciBxdW90ID0gcy5jaGFyQXQoaSk7CiAgICAgICAgaS0tOwogICAgICAgIHdoaWxlKGkgPj0gMCAmJiAhZXF1YWxCdXROb3RFc2NhcGVkKHMsaSxxdW90KSkgewogICAgICAgICAgLy9kdW1wKHMuY2hhckF0KGkpKTsKICAgICAgICAgIGktLTsKICAgICAgICB9CiAgICAgICAgLy9kdW1wKCJcbiIpOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gaTsKICB9CgogIC8vIFhYWCBzaG91bGQgYmUgdXNlZCBtb3JlIGNvbnNpc3RlbnRseSAoaW5zdGVhZCBvZiB1c2luZyBzZWxlY3Rpb25TdGFydC9zZWxlY3Rpb25FbmQgdGhyb3VnaG91dCBjb2RlKQogIC8vIFhYWCBkb2Vzbid0IHdvcmsgaW4gSUUsIGV2ZW4gdGhvdWdoIGl0IGNvbnRhaW5zIElFLXNwZWNpZmljIGNvZGUKICBmdW5jdGlvbiBnZXRjYXJldHBvcyhpbnApCiAgewogICAgaWYoaW5wLnNlbGVjdGlvbkVuZCAhPSBudWxsKQogICAgICByZXR1cm4gaW5wLnNlbGVjdGlvbkVuZDsKCiAgICBpZihpbnAuY3JlYXRlVGV4dFJhbmdlKQogICAgewogICAgICB2YXIgZG9jcmFuZ2UgPSBfd2luLlNoZWxsLmRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpOwogICAgICB2YXIgaW5wcmFuZ2UgPSBpbnAuY3JlYXRlVGV4dFJhbmdlKCk7CiAgICAgIGlmIChpbnByYW5nZS5zZXRFbmRQb2ludCkKICAgICAgewogICAgICAgIGlucHJhbmdlLnNldEVuZFBvaW50KCdFbmRUb1N0YXJ0JywgZG9jcmFuZ2UpOwogICAgICAgIHJldHVybiBpbnByYW5nZS50ZXh0Lmxlbmd0aDsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBpbnAudmFsdWUubGVuZ3RoOyAvLyBzdWNrcywgcHVudAogIH0KCiAgZnVuY3Rpb24gc2V0c2VsZWN0aW9udG8oaW5wLHBvcykKICB7CiAgICBpZihpbnAuc2VsZWN0aW9uU3RhcnQpIHsKICAgICAgaW5wLnNlbGVjdGlvblN0YXJ0ID0gaW5wLnNlbGVjdGlvbkVuZCA9IHBvczsKICAgIH0KICAgIGVsc2UgaWYoaW5wLmNyZWF0ZVRleHRSYW5nZSkgewogICAgICB2YXIgZG9jcmFuZ2UgPSBfd2luLlNoZWxsLmRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpOwogICAgICB2YXIgaW5wcmFuZ2UgPSBpbnAuY3JlYXRlVGV4dFJhbmdlKCk7CiAgICAgIGlucHJhbmdlLm1vdmUoJ2NoYXJhY3RlcicscG9zKTsKICAgICAgaW5wcmFuZ2Uuc2VsZWN0KCk7CiAgICB9CiAgICBlbHNlIHsgLy8gZXJyLi4uCiAgICAvKgogICAgICBpbnAuc2VsZWN0KCk7CiAgICAgIGlmKF93aW4uU2hlbGwuZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCkpCiAgICAgICAgX3dpbi5TaGVsbC5kb2N1bWVudC5nZXRTZWxlY3Rpb24oKSA9ICIiOwogICAgICAgICovCiAgICB9CiAgfQogICAgLy8gZ2V0IHBvc2l0aW9uIG9mIGN1cnNvciB3aXRoaW4gdGhlIGlucHV0IGJveAogICAgdmFyIGNhcmV0ID0gZ2V0Y2FyZXRwb3MoX2luKTsKCiAgICBpZihjYXJldCkgewogICAgICAvL2R1bXAoIi0tLS1cbiIpOwogICAgICB2YXIgZG90cG9zLCBzcGFjZXBvcywgY29tcGxldGUsIG9iajsKICAgICAgLy9kdW1wKCJjYXJldCBwb3M6ICIgKyBjYXJldCArICJcbiIpOwogICAgICAvLyBzZWUgaWYgdGhlcmUncyBhIGRvdCBiZWZvcmUgaGVyZQogICAgICBkb3Rwb3MgPSBmaW5kYmVnaW5uaW5nKF9pbi52YWx1ZSwgY2FyZXQtMSwgdHJ1ZSk7CiAgICAgIC8vZHVtcCgiZG90IHBvczogIiArIGRvdHBvcyArICJcbiIpOwogICAgICBpZihkb3Rwb3MgPT0gLTEgfHwgX2luLnZhbHVlLmNoYXJBdChkb3Rwb3MpICE9ICcuJykgewogICAgICAgIGRvdHBvcyA9IGNhcmV0OwovL2R1bXAoImNoYW5nZWQgZG90IHBvczogIiArIGRvdHBvcyArICJcbiIpOwogICAgICB9CgogICAgICAvLyBsb29rIGJhY2t3YXJkcyBmb3IgYSBub24tdmFyaWFibGUtbmFtZSBjaGFyYWN0ZXIKICAgICAgc3BhY2Vwb3MgPSBmaW5kYmVnaW5uaW5nKF9pbi52YWx1ZSwgZG90cG9zLTEsIGZhbHNlKTsKICAgICAgLy9kdW1wKCJzcGFjZSBwb3M6ICIgKyBzcGFjZXBvcyArICJcbiIpOwogICAgICAvLyBnZXQgdGhlIG9iamVjdCB3ZSdyZSB0cnlpbmcgdG8gY29tcGxldGUgb24KICAgICAgaWYoc3BhY2Vwb3MgPT0gZG90cG9zIHx8IHNwYWNlcG9zKzEgPT0gZG90cG9zIHx8IGRvdHBvcyA9PSBjYXJldCkKICAgICAgewogICAgICAgIC8vIHRyeSBjb21wbGV0aW5nIGZ1bmN0aW9uIGFyZ3MKICAgICAgICBpZihfaW4udmFsdWUuY2hhckF0KGRvdHBvcykgPT0gJygnIHx8CiAoX2luLnZhbHVlLmNoYXJBdChzcGFjZXBvcykgPT0gJygnICYmIChzcGFjZXBvcysxKSA9PSBkb3Rwb3MpKQogICAgICAgIHsKICAgICAgICAgIHZhciBmbixmbmFtZTsKICB2YXIgZnJvbSA9IChfaW4udmFsdWUuY2hhckF0KGRvdHBvcykgPT0gJygnKSA/IGRvdHBvcyA6IHNwYWNlcG9zOwogICAgICAgICAgc3BhY2Vwb3MgPSBmaW5kYmVnaW5uaW5nKF9pbi52YWx1ZSwgZnJvbS0xLCBmYWxzZSk7CgogICAgICAgICAgZm5hbWUgPSBfaW4udmFsdWUuc3Vic3RyKHNwYWNlcG9zKzEsZnJvbS0oc3BhY2Vwb3MrMSkpOwogIC8vZHVtcCgiZm5hbWU6ICIgKyBmbmFtZSArICJcbiIpOwogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgd2l0aChfd2luLlNoZWxsLl9zY29wZSkKICAgICAgICAgICAgICB3aXRoKF93aW4pCiAgICAgICAgICAgICAgICB3aXRoKFNoZWxsLnNoZWxsQ29tbWFuZHMpCiAgICAgICAgICAgICAgICAgIGZuID0gZXZhbChmbmFtZSk7CiAgICAgICAgICB9CiAgICAgICAgICBjYXRjaChlcikgewogICAgICAgICAgICAvL2R1bXAoJ2ZuIGlzIG5vdCBhIHZhbGlkIG9iamVjdFxuJyk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICAgIGlmKGZuID09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgLy9kdW1wKCdmbiBpcyB1bmRlZmluZWQnKTsKICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICAgIGlmKGZuIGluc3RhbmNlb2YgRnVuY3Rpb24pCiAgICAgICAgICB7CiAgICAgICAgICAgIC8vIFByaW50IGZ1bmN0aW9uIGRlZmluaXRpb24sIGluY2x1ZGluZyBhcmd1bWVudCBuYW1lcywgYnV0IG5vdCBmdW5jdGlvbiBib2R5CiAgICAgICAgICAgIGlmKCFmbi50b1N0cmluZygpLm1hdGNoKC9mdW5jdGlvbiAuKz9cKFwpICtce1xuICtcW25hdGl2ZSBjb2RlXF1cblx9LykpCiAgICAgICAgICAgICAgcHJpbnRsbihmbi50b1N0cmluZygpLm1hdGNoKC9mdW5jdGlvbiAuKz9cKC4qP1wpLyksICJ0YWJjb21wbGV0ZSIpOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgICAgb2JqID0gX3dpbjsKICAgICAgfQogICAgICBlbHNlCiAgICAgIHsKICAgICAgICB2YXIgb2JqbmFtZSA9IF9pbi52YWx1ZS5zdWJzdHIoc3BhY2Vwb3MrMSxkb3Rwb3MtKHNwYWNlcG9zKzEpKTsKICAgICAgICAvL2R1bXAoIm9iam5hbWU6IHwiICsgb2JqbmFtZSArICJ8XG4iKTsKICAgICAgICB0cnkgewogICAgICAgICAgd2l0aChfd2luLlNoZWxsLl9zY29wZSkKICAgICAgICAgICAgd2l0aChfd2luKQogICAgICAgICAgICAgICAgb2JqID0gZXZhbChvYmpuYW1lKTsKICAgICAgICB9CiAgICAgICAgY2F0Y2goZXIpIHsKICAgICAgICAgIHByaW50RXJyb3IoZXIpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBpZihvYmogPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAvLyBzb21ldGltZXMgdGhpcyBpcyB0YWJjb21wbGV0ZSdzIGZhdWx0LCBzbyBkb24ndCBwcmludCBpdCA6KAogICAgICAgICAgLy8gZS5nLiBjb21wbGV0aW5nIGZyb20gInByaW50KGRvY3VtZW50LmdldEVsZW1lbnRzIgogICAgICAgICAgLy8gcHJpbnRsbigiQ2FuJ3QgY29tcGxldGUgZnJvbSBudWxsIG9yIHVuZGVmaW5lZCBleHByZXNzaW9uICIgKyBvYmpuYW1lLCAiZXJyb3IiKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgIH0KICAgICAgLy9kdW1wKCJvYmo6ICIgKyBvYmogKyAiXG4iKTsKICAgICAgLy8gZ2V0IHRoZSB0aGluZyB3ZSdyZSB0cnlpbmcgdG8gY29tcGxldGUKICAgICAgaWYoZG90cG9zID09IGNhcmV0KQogICAgICB7CiAgICAgICAgaWYoc3BhY2Vwb3MrMSA9PSBkb3Rwb3MgfHwgc3BhY2Vwb3MgPT0gZG90cG9zKQogICAgICAgIHsKICAgICAgICAgIC8vIG5vdGhpbmcgdG8gY29tcGxldGUKICAgICAgICAgIC8vZHVtcCgibm90aGluZyB0byBjb21wbGV0ZVxuIik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBjb21wbGV0ZSA9IF9pbi52YWx1ZS5zdWJzdHIoc3BhY2Vwb3MrMSxkb3Rwb3MtKHNwYWNlcG9zKzEpKTsKICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICBjb21wbGV0ZSA9IF9pbi52YWx1ZS5zdWJzdHIoZG90cG9zKzEsY2FyZXQtKGRvdHBvcysxKSk7CiAgICAgIH0KICAgICAgLy9kdW1wKCJjb21wbGV0ZTogIiArIGNvbXBsZXRlICsgIlxuIik7CiAgICAgIC8vIG9rLCBub3cgbG9vayBhdCBhbGwgdGhlIHByb3BzL21ldGhvZHMgb2YgdGhpcyBvYmoKICAgICAgLy8gYW5kIGZpbmQgb25lcyBzdGFydGluZyB3aXRoICdjb21wbGV0ZScKICAgICAgdmFyIG1hdGNoZXMgPSBbXTsKICAgICAgdmFyIGJlc3RtYXRjaCA9IG51bGw7CiAgICAgIGZvcih2YXIgYSBpbiBvYmopCiAgICAgIHsKICAgICAgICAvL2EgPSBhLnRvU3RyaW5nKCk7CiAgICAgICAgLy9YWFg6IG1ha2luZyBpdCBsb3dlcmNhc2UgY291bGQgaGVscCBzb21lIGNhc2VzLAogICAgICAgIC8vIGJ1dCBzY3Jld3MgdXAgbXkgZ2VuZXJhbCBsb2dpYy4KICAgICAgICBpZihhLnN1YnN0cigwLGNvbXBsZXRlLmxlbmd0aCkgPT0gY29tcGxldGUpIHsKICAgICAgICAgIG1hdGNoZXMucHVzaChhKTsKICAgICAgICAgIC8vLy9kdW1wKCJtYXRjaDogIiArIGEgKyAiXG4iKTsKICAgICAgICAgIC8vIGlmIG5vIGJlc3QgbWF0Y2gsIHRoaXMgaXMgdGhlIGJlc3QgbWF0Y2gKICAgICAgICAgIGlmKGJlc3RtYXRjaCA9PSBudWxsKQogICAgICAgICAgewogICAgICAgICAgICBiZXN0bWF0Y2ggPSBhOwogICAgICAgICAgfQogICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIC8vIHRoZSBiZXN0IG1hdGNoIGlzIHRoZSBsb25nZXN0IGNvbW1vbiBzdHJpbmcKICAgICAgICAgICAgZnVuY3Rpb24gbWluKGEsYil7IHJldHVybiAoKGE8Yik/YTpiKTsgfQogICAgICAgICAgICB2YXIgaTsKICAgICAgICAgICAgZm9yKGk9MDsgaTwgbWluKGJlc3RtYXRjaC5sZW5ndGgsIGEubGVuZ3RoKTsgaSsrKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgaWYoYmVzdG1hdGNoLmNoYXJBdChpKSAhPSBhLmNoYXJBdChpKSkKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJlc3RtYXRjaCA9IGJlc3RtYXRjaC5zdWJzdHIoMCxpKTsKICAgICAgICAgICAgLy8vL2R1bXAoImJlc3RtYXRjaCBsZW46ICIgKyBpICsgIlxuIik7CiAgICAgICAgICB9CiAgICAgICAgICAvLy8vZHVtcCgiYmVzdG1hdGNoOiAiICsgYmVzdG1hdGNoICsgIlxuIik7CiAgICAgICAgfQogICAgICB9CiAgICAgIGJlc3RtYXRjaCA9IChiZXN0bWF0Y2ggfHwgIiIpOwogICAgICAvLy8vZHVtcCgibWF0Y2hlczogIiArIG1hdGNoZXMgKyAiXG4iKTsKICAgICAgdmFyIG9iakFuZENvbXBsZXRlID0gKG9iam5hbWUgfHwgb2JqKSArICIuIiArIGJlc3RtYXRjaDsKICAgICAgLy9kdW1wKCJtYXRjaGVzLmxlbmd0aDogIiArIG1hdGNoZXMubGVuZ3RoICsgIiwgdG9vTWFueU1hdGNoZXM6ICIgKyB0b29NYW55TWF0Y2hlcyArICIsIG9iakFuZENvbXBsZXRlOiAiICsgb2JqQW5kQ29tcGxldGUgKyAiXG4iKTsKICAgICAgaWYobWF0Y2hlcy5sZW5ndGggPiAxICYmICh0b29NYW55TWF0Y2hlcyA9PSBvYmpBbmRDb21wbGV0ZSB8fCBtYXRjaGVzLmxlbmd0aCA8PSAxMCkpIHsKCiAgICAgICAgcHJpbnRXaXRoUnVuaW4oIk1hdGNoZXM6ICIsIG1hdGNoZXMuam9pbignLCAnKSwgInRhYmNvbXBsZXRlIik7CiAgICAgICAgdG9vTWFueU1hdGNoZXMgPSBudWxsOwogICAgICB9CiAgICAgIGVsc2UgaWYobWF0Y2hlcy5sZW5ndGggPiAxMCkKICAgICAgewogICAgICAgIHByaW50bG4obWF0Y2hlcy5sZW5ndGggKyAiIG1hdGNoZXMuICBQcmVzcyB0YWIgYWdhaW4gdG8gc2VlIHRoZW0gYWxsIiwgInRhYmNvbXBsZXRlIik7CiAgICAgICAgdG9vTWFueU1hdGNoZXMgPSBvYmpBbmRDb21wbGV0ZTsKICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICB0b29NYW55TWF0Y2hlcyA9IG51bGw7CiAgICAgIH0KICAgICAgaWYoYmVzdG1hdGNoICE9ICIiKQogICAgICB7CiAgICAgICAgdmFyIHNzdGFydDsKICAgICAgICBpZihkb3Rwb3MgPT0gY2FyZXQpIHsKICAgICAgICAgIHNzdGFydCA9IHNwYWNlcG9zKzE7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgc3N0YXJ0ID0gZG90cG9zKzE7CiAgICAgICAgfQogICAgICAgIF9pbi52YWx1ZSA9IF9pbi52YWx1ZS5zdWJzdHIoMCwgc3N0YXJ0KQogICAgICAgICAgICAgICAgICArIGJlc3RtYXRjaAogICAgICAgICAgICAgICAgICArIF9pbi52YWx1ZS5zdWJzdHIoY2FyZXQpOwogICAgICAgIHNldHNlbGVjdGlvbnRvKF9pbixjYXJldCArIChiZXN0bWF0Y2gubGVuZ3RoIC0gY29tcGxldGUubGVuZ3RoKSk7CiAgICAgIH0KICAgIH0KfQoKZnVuY3Rpb24gcHJpbnRRdWVzdGlvbihxKQp7CiAgcHJpbnRsbihxLCAiaW5wdXQiKTsKfQoKZnVuY3Rpb24gcHJpbnRBbnN3ZXIoYSkKewogIGlmIChhICE9PSB1bmRlZmluZWQpIHsKICAgIHByaW50bG4oYSwgIm5vcm1hbE91dHB1dCIpOwogICAgc2hlbGxDb21tYW5kcy5hbnMgPSBhOwogIH0KfQoKZnVuY3Rpb24gcHJpbnRFcnJvcihlcikKewogIHZhciBsaW5lTnVtYmVyU3RyaW5nOwoKICBsYXN0RXJyb3IgPSBlcjsgLy8gZm9yIGRlYnVnZ2luZyB0aGUgc2hlbGwKICBpZiAoZXIubmFtZSkKICB7CiAgICAvLyBsaW5lTnVtYmVyU3RyaW5nIHNob3VsZCBub3QgYmUgIiIsIHRvIGF2b2lkIGEgdmVyeSB3YWNreSBidWcgaW4gSUUgNi4KICAgIGxpbmVOdW1iZXJTdHJpbmcgPSAoZXIubGluZU51bWJlciAhPSB1bmRlZmluZWQpID8gKCIgb24gbGluZSAiICsgZXIubGluZU51bWJlciArICI6ICIpIDogIjogIjsKICAgIHByaW50bG4oZXIubmFtZSArIGxpbmVOdW1iZXJTdHJpbmcgKyBlci5tZXNzYWdlLCAiZXJyb3IiKTsgLy8gQmVjYXVzZSBJRSBkb2Vzbid0IGhhdmUgZXJyb3IudG9TdHJpbmcuCiAgfQogIGVsc2UKICAgIHByaW50bG4oZXIsICJlcnJvciIpOyAvLyBCZWNhdXNlIHNlY3VyaXR5IGVycm9ycyBpbiBNb3ogL29ubHkvIGhhdmUgdG9TdHJpbmcuCn0KCmZ1bmN0aW9uIGdvKHMpCnsKICBfaW4udmFsdWUgPSBxdWVzdGlvbiA9IHMgPyBzIDogX2luLnZhbHVlOwoKICBpZiAocXVlc3Rpb24gPT0gIiIpCiAgICByZXR1cm47CgogIGhpc3RMaXN0W2hpc3RMaXN0Lmxlbmd0aC0xXSA9IHF1ZXN0aW9uOwogIGhpc3RMaXN0W2hpc3RMaXN0Lmxlbmd0aF0gPSAiIjsKICBoaXN0UG9zID0gaGlzdExpc3QubGVuZ3RoIC0gMTsKCiAgLy8gVW5mb3J0dW5hdGVseSwgdGhpcyBoYXMgdG8gaGFwcGVuICpiZWZvcmUqIHRoZSBKYXZhU2NyaXB0IGlzIHJ1biwgc28gdGhhdAogIC8vIHByaW50KCkgb3V0cHV0IHdpbGwgZ28gaW4gdGhlIHJpZ2h0IHBsYWNlLgogIF9pbi52YWx1ZT0nJzsKICByZWNhbGN1bGF0ZUlucHV0SGVpZ2h0KCk7CiAgcHJpbnRRdWVzdGlvbihxdWVzdGlvbik7CgogIGlmIChfd2luLmNsb3NlZCkgewogICAgcHJpbnRFcnJvcigiVGFyZ2V0IHdpbmRvdyBoYXMgYmVlbiBjbG9zZWQuIik7CiAgICByZXR1cm47CiAgfQoKICB0cnkgeyAoIlNoZWxsIiBpbiBfd2luKSB9CiAgY2F0Y2goZXIpIHsKICAgIHByaW50RXJyb3IoIlRoZSBKYXZhU2NyaXB0IFNoZWxsIGNhbm5vdCBhY2Nlc3MgdmFyaWFibGVzIGluIHRoZSB0YXJnZXQgd2luZG93LiAgVGhlIG1vc3QgbGlrZWx5IHJlYXNvbiBpcyB0aGF0IHRoZSB0YXJnZXQgd2luZG93IG5vdyBoYXMgYSBkaWZmZXJlbnQgcGFnZSBsb2FkZWQgYW5kIHRoYXQgcGFnZSBoYXMgYSBkaWZmZXJlbnQgaG9zdG5hbWUgdGhhbiB0aGUgb3JpZ2luYWwgcGFnZS4iKTsKICAgIHJldHVybjsKICB9CgogIGlmICghKCJTaGVsbCIgaW4gX3dpbikpCiAgICBpbml0VGFyZ2V0KCk7IC8vIHNpbGVudAoKICAvLyBFdmFsdWF0ZSBTaGVsbC5xdWVzdGlvbiB1c2luZyBfd2luJ3MgZXZhbCAodGhpcyBpcyB3aHkgZXZhbCBpc24ndCBpbiB0aGUgfHdpdGh8LCBJSVJDKS4KICBfd2luLmxvY2F0aW9uLmhyZWYgPSAiamF2YXNjcmlwdDp0cnl7IFNoZWxsLnByaW50QW5zd2VyKGV2YWwoJ3dpdGgoU2hlbGwuX3Njb3BlKSB3aXRoKFNoZWxsLnNoZWxsQ29tbWFuZHMpIHsnICsgU2hlbGwucXVlc3Rpb24gKyBTdHJpbmcuZnJvbUNoYXJDb2RlKDEwKSArICd9JykpOyB9IGNhdGNoKGVyKSB7IFNoZWxsLnByaW50RXJyb3IoZXIpOyB9OyBzZXRUaW1lb3V0KFNoZWxsLnJlZm9jdXMsIDApOyB2b2lkIDAiOwp9CgoiLCJpZCI6IiIsInR5cGUiOiJ0ZXh0L2phdmFzY3JpcHQiLCJlbmNyIjoibm9uZSJ9LHsiY29kZSI6IiIsImlkIjoiIiwidHlwZSI6InRleHQvamF2YXNjcmlwdCIsImVuY3IiOiJub25lIn0seyJjb2RlIjoiIiwiaWQiOiIiLCJ0eXBlIjoidGV4dC9qYXZhc2NyaXB0IiwiZW5jciI6Im5vbmUifSx7ImNvZGUiOiIKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCl7CiAgCiAgaW5pdCgpCiAgICAgICAgICAgIAp9LCA1MDAwKTsgCiIsImlkIjoiIiwidHlwZSI6IiIsImVuY3IiOiJub25lIn1dLCJib2R5IjoiCgo8ZGl2IGlkPSJvdXRwdXQiPjxoMz5KYXZhU2NyaXB0IFNoZWxsIDEuNDwvaDM+PC9kaXY+Cgo8ZGl2Pjx0ZXh0YXJlYSBpZD0iaW5wdXQiIGNsYXNzPSJpbnB1dCIgd3JhcD0ib2ZmIiBvbmtleWRvd249ImlucHV0S2V5ZG93bihldmVudCkiIHJvd3M9IjEiPjwvdGV4dGFyZWE+PC9kaXY+CgoKCgoKIiwiaGVhZCI6Igo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1pc28tODg1OS0xIj4KPHRpdGxlPkphdmFTY3JpcHQgU2hlbGwgMS40PC90aXRsZT4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCgpmdW5jdGlvbiBicm93c2VyKCkgewogICAgIHdpbmRvdy5vcGVuKAogICAgICAgICAgImh0dHBzOi8vZzFrazQuY3NiLmFwcCIsCiAgICAgICAgICAiX2JsYW5rIiwKICAgICAgICAgICJ0b29sYmFyPXllcyxzY3JvbGxiYXJzPXllcyxyZXNpemFibGU9eWVzLHRvcD01MDAsbGVmdD01MDAsd2lkdGg9MTAwMCxoZWlnaHQ9NTAwIgogICAgICAgICk7Cn0KCmZ1bmN0aW9uIGZyYW1lKHVybCkKIHsKICAgICAoZnVuY3Rpb24oKSB7CiAgLy8gY29udGFpbmVyCiAgdmFyIGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogIGNvbnRhaW5lci5pZCA9ICJsaW5rLXZpZXdlciI7CgogIGNvbnRhaW5lci5zdHlsZS5hbGwgPSAidW5zZXQiOwoKICBjb250YWluZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNGRkYiOwogIGNvbnRhaW5lci5zdHlsZS53aWR0aCA9ICI0MDBweCI7CiAgY29udGFpbmVyLnN0eWxlLmJvcmRlciA9ICJzb2xpZCAxcHggI0FBQSI7CiAgY29udGFpbmVyLnN0eWxlLmJvcmRlclJhZGl1cyA9ICIycHgiOwogIGNvbnRhaW5lci5zdHlsZS5wb3NpdGlvbiA9ICJmaXhlZCI7CiAgY29udGFpbmVyLnN0eWxlLnRvcCA9ICIxMDBweCI7CiAgY29udGFpbmVyLnN0eWxlLmxlZnQgPSAiMTAwcHgiOwogIGNvbnRhaW5lci5zdHlsZS56SW5kZXggPSAiOTk5OTk5OTk5OTk5OTk5OTk5OSI7CgogIC8vIGlGcmFtZQogIHZhciBpRnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpZnJhbWUiKTsKICBpRnJhbWUuaWQgPSAibGluay12aWV3ZXItaWZyYW1lIjsKCiAgaUZyYW1lLnN0eWxlLmFsbCA9ICJ1bnNldCI7CgogIGlGcmFtZS5zdHlsZS5tYXJnaW4gPSAiMHB4IjsKICBpRnJhbWUuc3R5bGUud2lkdGggPSBjb250YWluZXIuc3R5bGUud2lkdGg7CiAgaUZyYW1lLmhlaWdodCA9IGlGcmFtZS5zdHlsZS5oZWlnaHQgPSAiMjAwcHgiOwogIGlGcmFtZS5zdHlsZS5ib3JkZXIgPSAibm9uZSI7CiAgaUZyYW1lLnNyYyA9ICJkYXRhOnRleHQvaHRtbCwgPGgxIHN0eWxlPSdtYXJnaW46IDQwcHggMHB4IDIwcHggMHB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyc+RW50ZXIgYSBsaW5rIHRvIGdldCBzdGFydGVkITwvaDE+IjsKCiAgaUZyYW1lLnN0eWxlLnJlc2l6ZSA9ICJib3RoIjsKICBpRnJhbWUuc3R5bGUub3ZlcmZsb3cgPSAiaGlkZGVuIjsKCiAgLy8gY29udGVudCBob2xkZXIKICB2YXIgY29udGVudEhvbGRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogIGNvbnRlbnRIb2xkZXIuaWQgPSAibGluay12aWV3ZXItY29udGVudC1ob2xkZXIiOwoKICBjb250ZW50SG9sZGVyLnN0eWxlLmFsbCA9ICJ1bnNldCI7CgogIGNvbnRlbnRIb2xkZXIuc3R5bGUud2lkdGggPSAiNDAwcHgiOwogIGNvbnRlbnRIb2xkZXIuc3R5bGUuaGVpZ2h0ID0gaUZyYW1lLmhlaWdodDsKICBjb250ZW50SG9sZGVyLnN0eWxlLnBhZGRpbmcgPSAiMHB4IjsKICBjb250ZW50SG9sZGVyLnN0eWxlLm1hcmdpbiA9ICIwcHgiOwoKICBjb250ZW50SG9sZGVyLmFwcGVuZChpRnJhbWUpOwogIGNvbnRhaW5lci5hcHBlbmQoY29udGVudEhvbGRlcik7CgogIC8vIGhlYWRlcgogIHZhciBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICBoZWFkZXIuaWQgPSAibGluay12aWV3ZXItaGVhZGVyIjsKCiAgaGVhZGVyLnN0eWxlLmFsbCA9ICJ1bnNldCI7CgogIGhlYWRlci5zdHlsZS5kaXNwbGF5ID0gImZsZXgiOwogIGhlYWRlci5zdHlsZS5qdXN0aWZ5Q29udGVudCA9ICJzcGFjZS1iZXR3ZWVuIjsKICBoZWFkZXIuc3R5bGUuYWxpZ25JdGVtcyA9ICJjZW50ZXIiOwogIGhlYWRlci5zdHlsZS51c2VyU2VsZWN0ID0gIm5vbmUiOwogIGhlYWRlci5zdHlsZS5wYWRkaW5nID0gIjNweCI7CiAgaGVhZGVyLnN0eWxlLm1hcmdpbiA9ICIwcHgiOwogIGhlYWRlci5zdHlsZS5ib3JkZXJCb3R0b20gPSAic29saWQgMXB4ICNBQUEiOwoKICBoZWFkZXIuc3R5bGUuaGVpZ2h0ID0gIjIwcHgiOwogIGhlYWRlci5zdHlsZS53aWR0aCA9IE51bWJlcihjb250ZW50SG9sZGVyLnN0eWxlLndpZHRoLnNsaWNlKDAsIC0yKSAtIDYpICsgInB4IjsKCiAgdmFyIGRyYWdnZWQgPSBmYWxzZTsKICB2YXIgc3RhcnRYID0gMDsKICB2YXIgc3RhcnRZID0gMDsKICBoZWFkZXIuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vkb3duIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgIHN0YXJ0WCA9IE51bWJlcihjb250YWluZXIuc3R5bGUubGVmdC5zbGljZSgwLCAtMikpIC0gZXZlbnQuY2xpZW50WDsKICAgIHN0YXJ0WSA9IE51bWJlcihjb250YWluZXIuc3R5bGUudG9wLnNsaWNlKDAsIC0yKSkgLSBldmVudC5jbGllbnRZOwogICAgZHJhZ2dlZCA9IHRydWU7CiAgfSk7CiAgaGVhZGVyLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNldXAiLCBmdW5jdGlvbihldmVudCkgewogICAgZHJhZ2dlZCA9IGZhbHNlOwogIH0pOwoKICAvLyBBbHNvIGtlZXBpbmcgdHJhY2sgb2Ygc2l6ZSB0b28KICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibW91c2Vtb3ZlIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgIGlmIChkcmFnZ2VkKSB7CiAgICAgIGNvbnRhaW5lci5zdHlsZS50b3AgPSAoZXZlbnQuY2xpZW50WSArIHN0YXJ0WSkgKyAicHgiOwogICAgICBjb250YWluZXIuc3R5bGUubGVmdCA9IChldmVudC5jbGllbnRYICsgc3RhcnRYKSArICJweCI7CiAgICB9CiAgICB2YXIgeCA9IE51bWJlcihjb250YWluZXIuc3R5bGUubGVmdC5zbGljZSgwLCAtMikpOwogICAgdmFyIHkgPSBOdW1iZXIoY29udGFpbmVyLnN0eWxlLnRvcC5zbGljZSgwLCAtMikpOwogICAgaWYgKHggPCAwKSB7CiAgICAgIGNvbnRhaW5lci5zdHlsZS5sZWZ0ID0gIjBweCI7CiAgICB9CiAgICBpZiAoeSA8IDApIHsKICAgICAgY29udGFpbmVyLnN0eWxlLnRvcCA9ICIwcHgiOwogICAgfQoKICAgIGNvbnRlbnRIb2xkZXIuc3R5bGUuaGVpZ2h0ID0gaUZyYW1lLnN0eWxlLmhlaWdodDsKICAgIGNvbnRlbnRIb2xkZXIuc3R5bGUud2lkdGggPSBpRnJhbWUuc3R5bGUud2lkdGg7CgogICAgaGVhZGVyLnN0eWxlLndpZHRoID0gKE51bWJlcihjb250ZW50SG9sZGVyLnN0eWxlLndpZHRoLnNsaWNlKDAsIC0yKSkgLSA2KSArICJweCI7CgogICAgY29udGFpbmVyLnN0eWxlLndpZHRoID0gY29udGVudEhvbGRlci5zdHlsZS53aWR0aDsKICAgIGNvbnRhaW5lci5zdHlsZS5oZWlnaHQgPSAoTnVtYmVyKGNvbnRlbnRIb2xkZXIuc3R5bGUuaGVpZ2h0LnNsaWNlKDAsIC0yKSkgKyAyNykgKyAicHgiOwoKICAgIGlmKE51bWJlcihoZWFkZXIuc3R5bGUud2lkdGguc2xpY2UoMCwgLTIpKSA8IDMwMCl7CiAgICBjb250ZW50SG9sZGVyLnN0eWxlLndpZHRoID0gIjMwMHB4IjsKICAgIGhlYWRlci5zdHlsZS53aWR0aCA9ICIyOTRweCI7CiAgICBjb250YWluZXIuc3R5bGUud2lkdGggPSAiMzAwcHgiOwogICAgaUZyYW1lLnN0eWxlLndpZHRoID0gIjMwMHB4IjsKICAgIH0KICB9KTsKCiAgLy8gdGV4dCBzdHVmZgogIHZhciBoZWFkZXJUZXh0SG9sZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CgogIGhlYWRlclRleHRIb2xkZXIuc3R5bGUuYWxsID0gInVuc2V0IjsKCiAgLy8gaGVhZGVyIHRleHQKICB2YXIgaGVhZGVyVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImgxIik7CiAgaGVhZGVyVGV4dC50ZXh0Q29udGVudCA9ICJMaW5rIFZpZXdlciI7CgogIGhlYWRlclRleHQuc3R5bGUuYWxsID0gInVuc2V0IjsKCiAgaGVhZGVyVGV4dC5zdHlsZS5mb250RmFtaWx5ID0gInNhbnMtc2VyaWYiOwogIGhlYWRlclRleHQuc3R5bGUuY29sb3IgPSAiIzQ0NCI7CiAgaGVhZGVyVGV4dC5zdHlsZS5mb250U2l6ZSA9ICIyMHB4IjsKICBoZWFkZXJUZXh0LnN0eWxlLm1hcmdpbiA9ICIwcHgiOwogIGhlYWRlclRleHQuc3R5bGUucGFkZGluZyA9ICIwcHgiOwoKICBoZWFkZXJUZXh0SG9sZGVyLmFwcGVuZChoZWFkZXJUZXh0KTsKICBoZWFkZXIuYXBwZW5kKGhlYWRlclRleHRIb2xkZXIpOwoKICAvLyBidXR0b24gc3R1ZmYgCiAgdmFyIGhlYWRlckJ1dHRvbkhvbGRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwoKICBoZWFkZXJCdXR0b25Ib2xkZXIuc3R5bGUuYWxsID0gInVuc2V0IjsKCiAgLy8gbGluayBidXR0b24KICB2YXIgbEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpOwogIGxCdXR0b24udGV4dENvbnRlbnQgPSAicnVuIHVybCI7CgogIGxCdXR0b24uc3R5bGUuYWxsID0gInVuc2V0IjsKCiAgbEJ1dHRvbi5zdHlsZS5mb250RmFtaWx5ID0gInNhbnMtc2VyaWYiOwogIGxCdXR0b24uc3R5bGUud2lkdGggPSAiMTAwcHgiOwogIGxCdXR0b24uc3R5bGUuaGVpZ2h0ID0gIjIwcHgiOwogIGxCdXR0b24uc3R5bGUuY3Vyc29yID0gInBvaW50ZXIiOwogIGxCdXR0b24uc3R5bGUubWFyZ2luID0gIjBweCAzcHggMHB4IDNweCI7CiAgbEJ1dHRvbi5zdHlsZS5jb2xvciA9ICIjMzMzIjsKICBsQnV0dG9uLnN0eWxlLmJvcmRlciA9ICJzb2xpZCAxcHggIzMzMyI7CiAgbEJ1dHRvbi5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiMnB4IjsKICBsQnV0dG9uLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjRUVFIjsKICBsQnV0dG9uLnN0eWxlLnRleHRBbGlnbiA9ICJjZW50ZXIiOwoKICBsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgICBsQnV0dG9uLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjREREIjsKICB9KTsKICBsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlbGVhdmUiLCBmdW5jdGlvbihldmVudCkgewogICAgbEJ1dHRvbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI0VFRSI7CiAgfSk7CiAgbEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgIAoKICAgIGlGcmFtZS5zcmMgPSB1cmw7CiAgfSk7CgogIGhlYWRlckJ1dHRvbkhvbGRlci5hcHBlbmQobEJ1dHRvbik7CgogIC8vIG1pbmltaXplIGJ1dHRvbgogIHZhciBtQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7CiAgbUJ1dHRvbi50ZXh0Q29udGVudCA9ICItIjsKCiAgbUJ1dHRvbi5zdHlsZS5hbGwgPSAidW5zZXQiOwoKICBtQnV0dG9uLnN0eWxlLmZvbnRGYW1pbHkgPSAic2Fucy1zZXJpZiI7CiAgbUJ1dHRvbi5zdHlsZS53aWR0aCA9ICIyMHB4IjsKICBtQnV0dG9uLnN0eWxlLmhlaWdodCA9ICIyMHB4IjsKICBtQnV0dG9uLnN0eWxlLmN1cnNvciA9ICJwb2ludGVyIjsKICBtQnV0dG9uLnN0eWxlLm1hcmdpbiA9ICIwcHggM3B4IDBweCAzcHgiOwogIG1CdXR0b24uc3R5bGUuY29sb3IgPSAiIzMzMyI7CiAgbUJ1dHRvbi5zdHlsZS5ib3JkZXIgPSAic29saWQgMXB4ICMzMzMiOwogIG1CdXR0b24uc3R5bGUuYm9yZGVyUmFkaXVzID0gIjJweCI7CiAgbUJ1dHRvbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI0VFRSI7CiAgbUJ1dHRvbi5zdHlsZS50ZXh0QWxpZ24gPSAiY2VudGVyIjsKCiAgbUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbihldmVudCkgewogICAgbUJ1dHRvbi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI0RERCI7CiAgfSk7CiAgbUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCJtb3VzZWxlYXZlIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgIG1CdXR0b24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNFRUUiOwogIH0pOwogIG1CdXR0b24uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCBmdW5jdGlvbihldmVudCkgewogICAgdmFyIGNsb3NlZCA9IGNvbnRlbnRIb2xkZXIuc3R5bGUuZGlzcGxheSA9PT0gIm5vbmUiOwogICAgaWYgKGNsb3NlZCkgewogICAgICBjb250ZW50SG9sZGVyLnN0eWxlLmRpc3BsYXkgPSAiYmxvY2siOwogICAgICBoZWFkZXIuc3R5bGUuYm9yZGVyQm90dG9tID0gInNvbGlkIDFweCAjQUFBIjsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnRlbnRIb2xkZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgaGVhZGVyLnN0eWxlLmJvcmRlckJvdHRvbSA9ICJub25lIjsKICAgIH0KICB9KTsKCiAgaGVhZGVyQnV0dG9uSG9sZGVyLmFwcGVuZChtQnV0dG9uKTsKCiAgLy8geCBidXR0b24KICB2YXIgeEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpOwogIHhCdXR0b24udGV4dENvbnRlbnQgPSAieCI7CgogIHhCdXR0b24uc3R5bGUuYWxsID0gInVuc2V0IjsKCiAgeEJ1dHRvbi5zdHlsZS5mb250RmFtaWx5ID0gInNhbnMtc2VyaWYiOwogIHhCdXR0b24uc3R5bGUud2lkdGggPSAiMjBweCI7CiAgeEJ1dHRvbi5zdHlsZS5oZWlnaHQgPSAiMjBweCI7CiAgeEJ1dHRvbi5zdHlsZS5jdXJzb3IgPSAicG9pbnRlciI7CiAgeEJ1dHRvbi5zdHlsZS5tYXJnaW4gPSAiMHB4IDNweCAwcHggM3B4IjsKICB4QnV0dG9uLnN0eWxlLmNvbG9yID0gIiMzMzMiOwogIHhCdXR0b24uc3R5bGUuYm9yZGVyID0gInNvbGlkIDFweCAjMzMzIjsKICB4QnV0dG9uLnN0eWxlLmJvcmRlclJhZGl1cyA9ICIycHgiOwogIHhCdXR0b24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNGMzMiOwogIHhCdXR0b24uc3R5bGUudGV4dEFsaWduID0gImNlbnRlciI7CgogIHhCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgIHhCdXR0b24uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNFMjIiOwogIH0pOwogIHhCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcigibW91c2VsZWF2ZSIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgICB4QnV0dG9uLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjRjMzIjsKICB9KTsKICB4QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZnVuY3Rpb24oZXZlbnQpIHsKICAgIGNvbnRhaW5lci5yZW1vdmUoKTsKICB9KTsKCiAgaGVhZGVyQnV0dG9uSG9sZGVyLmFwcGVuZCh4QnV0dG9uKTsKICBoZWFkZXIuYXBwZW5kKGhlYWRlckJ1dHRvbkhvbGRlcik7CgogIGNvbnRlbnRIb2xkZXIuYmVmb3JlKGhlYWRlcik7CgogIC8vIGFkZCB0byBib2R5CiAgZG9jdW1lbnQuYm9keSA9IGRvY3VtZW50LmJvZHkgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYm9keSIpOwogIGRvY3VtZW50LmJvZHkuYXBwZW5kKGNvbnRhaW5lcik7Cn0pKCk7CiB9CnZhcgpoaXN0TGlzdCA9IFsiIl0sCmhpc3RQb3MgPSAwLApfc2NvcGUgPSB7fSwKX3dpbiwgLy8gYSB0b3AtbGV2ZWwgY29udGV4dApxdWVzdGlvbiwKX2luLApfb3V0LAp0b29NYW55TWF0Y2hlcyA9IG51bGwsCmxhc3RFcnJvciA9IG51bGw7CgpmdW5jdGlvbiByZWZvY3VzKCkKewogIF9pbi5ibHVyKCk7IC8vIE5lZWRlZCBmb3IgTW96aWxsYSB0byBzY3JvbGwgY29ycmVjdGx5LgogIF9pbi5mb2N1cygpOwp9CgpmdW5jdGlvbiBpbml0KCkKewogIF9pbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJpbnB1dCIpOwogIF9vdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgib3V0cHV0Iik7CgogIF93aW4gPSB3aW5kb3c7CgogIGlmIChvcGVuZXIgJiYgIW9wZW5lci5jbG9zZWQpCiAgewogICAgcHJpbnRsbigiVXNpbmcgYm9va21hcmtsZXQgdmVyc2lvbiBvZiBzaGVsbDogY29tbWFuZHMgd2lsbCBydW4gaW4gb3BlbmVyJ3MgY29udGV4dC4iLCAibWVzc2FnZSIpOwogICAgX3dpbiA9IHdpbmRvdzsKICB9CgogIGluaXRUYXJnZXQoKTsKCiAgcmVjYWxjdWxhdGVJbnB1dEhlaWdodCgpOwogIHJlZm9jdXMoKTsKfQoKZnVuY3Rpb24gaW5pdFRhcmdldCgpCnsKICBfd2luLlNoZWxsID0gd2luZG93OwogIF93aW4ucHJpbnQgPSBzaGVsbENvbW1hbmRzLnByaW50Owp9CgoKLy8gVW5sZXNzIHRoZSB1c2VyIGlzIHNlbGVjdGVkIHNvbWV0aGluZywgcmVmb2N1cyB0aGUgdGV4dGJveC4KLy8gKHJlcXVlc3RlZCBieSBjYWlsbG9uLCBicmVuZGFuLCBhc2EpCmZ1bmN0aW9uIGtlZXBGb2N1c0luVGV4dGJveChlKQp7CiAgdmFyIGcgPSBlLnNyY0VsZW1lbnQgPyBlLnNyY0VsZW1lbnQgOiBlLnRhcmdldDsgLy8gSUUgdnMuIHN0YW5kYXJkCgogIHdoaWxlICghZy50YWdOYW1lKQogICAgZyA9IGcucGFyZW50Tm9kZTsKICB2YXIgdCA9IGcudGFnTmFtZS50b1VwcGVyQ2FzZSgpOwogIGlmICh0PT0iQSIgfHwgdD09IklOUFVUIikKICAgIHJldHVybjsKCiAgaWYgKHdpbmRvdy5nZXRTZWxlY3Rpb24pIHsKICAgIC8vIE1vemlsbGEKICAgIGlmIChTdHJpbmcod2luZG93LmdldFNlbGVjdGlvbigpKSkKICAgICAgcmV0dXJuOwogIH0KICBlbHNlIGlmIChkb2N1bWVudC5nZXRTZWxlY3Rpb24pIHsKICAgIC8vIE9wZXJhPyBOZXRzY2FwZSA0PwogICAgaWYgKGRvY3VtZW50LmdldFNlbGVjdGlvbigpKQogICAgICByZXR1cm47CiAgfQogIGVsc2UgewogICAgLy8gSUUKICAgIGlmICggZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCkudGV4dCApCiAgICAgIHJldHVybjsKICB9CgogIHJlZm9jdXMoKTsKfQoKZnVuY3Rpb24gaW5wdXRLZXlkb3duKGUpIHsKICAvLyBVc2Ugb25rZXlkb3duIGJlY2F1c2UgSUUgZG9lc24ndCBzdXBwb3J0IG9ua2V5cHJlc3MgZm9yIGFycm93IGtleXMKCiAgLy9hbGVydChlLmtleUNvZGUgKyAiIF4gIiArIGUua2V5Y29kZSk7CgogIGlmIChlLnNoaWZ0S2V5ICYmIGUua2V5Q29kZSA9PSAxMykgeyAvLyBzaGlmdC1lbnRlcgogICAgLy8gZG9uJ3QgZG8gYW55dGhpbmc7IGFsbG93IHRoZSBzaGlmdC1lbnRlciB0byBpbnNlcnQgYSBsaW5lIGJyZWFrIGFzIG5vcm1hbAogIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09IDEzKSB7IC8vIGVudGVyCiAgICAvLyBleGVjdXRlIHRoZSBpbnB1dCBvbiBlbnRlcgogICAgdHJ5IHsgZ28oKTsgfSBjYXRjaChlcikgeyBhbGVydChlcik7IH07CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyBfaW4udmFsdWUgPSAiIjsgfSwgMCk7IC8vIGNhbid0IHByZXZlbnREZWZhdWx0IG9uIGlucHV0LCBzbyBjbGVhciBpdCBsYXRlcgogIH0gZWxzZSBpZiAoZS5rZXlDb2RlID09IDM4KSB7IC8vIHVwCiAgICAvLyBnbyB1cCBpbiBoaXN0b3J5IGlmIGF0IHRvcCBvciBjdHJsLXVwCiAgICBpZiAoZS5jdHJsS2V5IHx8IGNhcmV0SW5GaXJzdExpbmUoX2luKSkKICAgICAgaGlzdCh0cnVlKTsKICB9IGVsc2UgaWYgKGUua2V5Q29kZSA9PSA0MCkgeyAvLyBkb3duCiAgICAvLyBnbyBkb3duIGluIGhpc3RvcnkgaWYgYXQgZW5kIG9yIGN0cmwtZG93bgogICAgaWYgKGUuY3RybEtleSB8fCBjYXJldEluTGFzdExpbmUoX2luKSkKICAgICAgaGlzdChmYWxzZSk7CiAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT0gOSkgeyAvLyB0YWIKICAgIHRhYmNvbXBsZXRlKCk7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyByZWZvY3VzKCk7IH0sIDApOyAvLyByZWZvY3VzIGJlY2F1c2UgdGFiIHdhcyBoaXQKICB9IGVsc2UgeyB9CgogIHNldFRpbWVvdXQocmVjYWxjdWxhdGVJbnB1dEhlaWdodCwgMCk7CgogIC8vcmV0dXJuIHRydWU7Cn07CgpmdW5jdGlvbiBjYXJldEluRmlyc3RMaW5lKHRleHRib3gpCnsKICAvLyBJRSBkb2Vzbid0IHN1cHBvcnQgc2VsZWN0aW9uU3RhcnQvc2VsZWN0aW9uRW5kCiAgaWYgKHRleHRib3guc2VsZWN0aW9uU3RhcnQgPT0gdW5kZWZpbmVkKQogICAgcmV0dXJuIHRydWU7CgogIHZhciBmaXJzdExpbmVCcmVhayA9IHRleHRib3gudmFsdWUuaW5kZXhPZigiXG4iKTsKCiAgcmV0dXJuICgoZmlyc3RMaW5lQnJlYWsgPT0gLTEpIHx8ICh0ZXh0Ym94LnNlbGVjdGlvblN0YXJ0IDw9IGZpcnN0TGluZUJyZWFrKSk7Cn0KCmZ1bmN0aW9uIGNhcmV0SW5MYXN0TGluZSh0ZXh0Ym94KQp7CiAgLy8gSUUgZG9lc24ndCBzdXBwb3J0IHNlbGVjdGlvblN0YXJ0L3NlbGVjdGlvbkVuZAogIGlmICh0ZXh0Ym94LnNlbGVjdGlvbkVuZCA9PSB1bmRlZmluZWQpCiAgICByZXR1cm4gdHJ1ZTsKCiAgdmFyIGxhc3RMaW5lQnJlYWsgPSB0ZXh0Ym94LnZhbHVlLmxhc3RJbmRleE9mKCJcbiIpOwoKICByZXR1cm4gKHRleHRib3guc2VsZWN0aW9uRW5kID4gbGFzdExpbmVCcmVhayk7Cn0KCmZ1bmN0aW9uIHJlY2FsY3VsYXRlSW5wdXRIZWlnaHQoKQp7CiAgdmFyIHJvd3MgPSBfaW4udmFsdWUuc3BsaXQoL1xuLykubGVuZ3RoCiAgICArIDEgLy8gcHJldmVudCBzY3JvbGxiYXIgZmxpY2tlcmluZyBpbiBNb3ppbGxhCiAgICArICh3aW5kb3cub3BlcmEgPyAxIDogMCk7IC8vIGxlYXZlIHJvb20gZm9yIHNjcm9sbGJhciBpbiBPcGVyYQoKICBpZiAoX2luLnJvd3MgIT0gcm93cykgLy8gd2l0aG91dCB0aGlzIGNoZWNrLCBpdCBpcyBpbXBvc3NpYmxlIHRvIHNlbGVjdCB0ZXh0IGluIE9wZXJhIDcuNjAgb3IgT3BlcmEgOC4wLgogICAgX2luLnJvd3MgPSByb3dzOwp9CgpmdW5jdGlvbiBwcmludGxuKHMsIHR5cGUpCnsKICBpZigocz1TdHJpbmcocykpKQogIHsKICAgIHZhciBuZXdkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIG5ld2Rpdi5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzKSk7CiAgICBuZXdkaXYuY2xhc3NOYW1lID0gdHlwZTsKICAgIF9vdXQuYXBwZW5kQ2hpbGQobmV3ZGl2KTsKICAgIHJldHVybiBuZXdkaXY7CiAgfQp9CgpmdW5jdGlvbiBwcmludFdpdGhSdW5pbihoLCBzLCB0eXBlKQp7CiAgdmFyIGRpdiA9IHByaW50bG4ocywgdHlwZSk7CiAgdmFyIGhlYWQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHJvbmciKTsKICBoZWFkLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGggKyAiOiAiKSk7CiAgZGl2Lmluc2VydEJlZm9yZShoZWFkLCBkaXYuZmlyc3RDaGlsZCk7Cn0KCgp2YXIgc2hlbGxDb21tYW5kcyA9CnsKbG9hZCA6IGZ1bmN0aW9uIGxvYWQodXJsKQp7CiAgdmFyIHMgPSBfd2luLmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwogIHMudHlwZSA9ICJ0ZXh0L2phdmFzY3JpcHQiOwogIHMuc3JjID0gdXJsOwogIF93aW4uZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImhlYWQiKVswXS5hcHBlbmRDaGlsZChzKTsKICBwcmludGxuKCJMb2FkaW5nICIgKyB1cmwgKyAiLi4uIiwgIm1lc3NhZ2UiKTsKfSwKCmNsZWFyIDogZnVuY3Rpb24gY2xlYXIoKQp7CiAgdmFyIENISUxEUkVOX1RPX1BSRVNFUlZFID0gMzsKICB3aGlsZSAoX291dC5jaGlsZE5vZGVzW0NISUxEUkVOX1RPX1BSRVNFUlZFXSkKICAgIF9vdXQucmVtb3ZlQ2hpbGQoX291dC5jaGlsZE5vZGVzW0NISUxEUkVOX1RPX1BSRVNFUlZFXSk7Cn0sCgpwcmludCA6IGZ1bmN0aW9uIHByaW50KHMpIHsgcHJpbnRsbihzLCAicHJpbnQiKTsgfSwKCi8vIHRoZSBub3JtYWwgZnVuY3Rpb24sICJwcmludCIsIHNob3VsZG4ndCByZXR1cm4gYSB2YWx1ZQovLyAoc3VnZ2VzdGVkIGJ5IGJyZW5kYW47IGxhdGVyIG5vdGljZWQgaXQgd2FzIGEgcHJvYmxlbSB3aGVuIHNob3dpbmcgb3RoZXJzKQpwciA6IGZ1bmN0aW9uIHByKHMpCnsKICBzaGVsbENvbW1hbmRzLnByaW50KHMpOyAvLyBuZWVkIHRvIHNwZWNpZnkgc2hlbGxDb21tYW5kcyBzbyBpdCBkb2Vzbid0IHRyeSB3aW5kb3cucHJpbnQoKSEKICByZXR1cm4gczsKfSwKCnByb3BzIDogZnVuY3Rpb24gcHJvcHMoZSwgb25lUGVyTGluZSkKewogIGlmIChlID09PSBudWxsKSB7CiAgICBwcmludGxuKCJwcm9wcyBjYWxsZWQgd2l0aCBudWxsIGFyZ3VtZW50IiwgImVycm9yIik7CiAgICByZXR1cm47CiAgfQoKICBpZiAoZSA9PT0gdW5kZWZpbmVkKSB7CiAgICBwcmludGxuKCJwcm9wcyBjYWxsZWQgd2l0aCB1bmRlZmluZWQgYXJndW1lbnQiLCAiZXJyb3IiKTsKICAgIHJldHVybjsKICB9CgogIHZhciBucyA9IFsiTWV0aG9kcyIsICJGaWVsZHMiLCAiVW5yZWFjaGFibGVzIl07CiAgdmFyIGFzID0gW1tdLCBbXSwgW11dOyAvLyBhcnJheSBvZiAoZW1wdHkpIGFycmF5cyBvZiBhcnJheXMhCiAgdmFyIHAsIGosIGk7IC8vIGxvb3AgdmFyaWFibGVzLCBzZXZlcmFsIHVzZWQgbXVsdGlwbGUgdGltZXMKCiAgdmFyIHByb3RvTGV2ZWxzID0gMDsKCiAgZm9yIChwID0gZTsgcDsgcCA9IHAuX19wcm90b19fKQogIHsKICAgIGZvciAoaT0wOyBpPG5zLmxlbmd0aDsgKytpKQogICAgICBhc1tpXVtwcm90b0xldmVsc10gPSBbXTsKICAgICsrcHJvdG9MZXZlbHM7CiAgfQoKICBmb3IodmFyIGEgaW4gZSkKICB7CiAgICAvLyBTaG9ydGNvbWluZzogZG9lc24ndCBjaGVjayB0aGF0IFZBTFVFUyBhcmUgdGhlIHNhbWUgaW4gb2JqZWN0IGFuZCBwcm90b3R5cGUuCgogICAgdmFyIHByb3RvTGV2ZWwgPSAtMTsKICAgIHRyeQogICAgewogICAgICBmb3IgKHAgPSBlOyBwICYmIChhIGluIHApOyBwID0gcC5fX3Byb3RvX18pCiAgICAgICAgKytwcm90b0xldmVsOwogICAgfQogICAgY2F0Y2goZXIpIHsgcHJvdG9MZXZlbCA9IDA7IH0gLy8gImluIiBvcGVyYXRvciB0aHJvd3Mgd2hlbiBwYXJhbSB0byBwcm9wcygpIGlzIGEgc3RyaW5nCgogICAgdmFyIHR5cGUgPSAxOwogICAgdHJ5CiAgICB7CiAgICAgIGlmICgodHlwZW9mIGVbYV0pID09ICJmdW5jdGlvbiIpCiAgICAgICAgdHlwZSA9IDA7CiAgICB9CiAgICBjYXRjaCAoZXIpIHsgdHlwZSA9IDI7IH0KCiAgICBhc1t0eXBlXVtwcm90b0xldmVsXS5wdXNoKGEpOwogIH0KCiAgZnVuY3Rpb24gdGltZXMocywgbikgeyByZXR1cm4gbiA/IHMgKyB0aW1lcyhzLCBuLTEpIDogIiI7IH0KCiAgZm9yIChqPTA7IGo8cHJvdG9MZXZlbHM7ICsraikKICAgIGZvciAoaT0wO2k8bnMubGVuZ3RoOysraSkKICAgICAgaWYgKGFzW2ldW2pdLmxlbmd0aCkKICAgICAgICBwcmludFdpdGhSdW5pbigKICAgICAgICAgIG5zW2ldICsgdGltZXMoIiBvZiBwcm90b3R5cGUiLCBqKSwKICAgICAgICAgIChvbmVQZXJMaW5lID8gIlxuXG4iIDogIiIpICsgYXNbaV1bal0uc29ydCgpLmpvaW4ob25lUGVyTGluZSA/ICJcbiIgOiAiLCAiKSArIChvbmVQZXJMaW5lID8gIlxuXG4iIDogIiIpLAogICAgICAgICAgInByb3BMaXN0IgogICAgICAgICk7Cn0sCgpibGluayA6IGZ1bmN0aW9uIGJsaW5rKG5vZGUpCnsKICBpZiAoIW5vZGUpICAgICAgICAgICAgICAgICAgICAgdGhyb3coImJsaW5rOiBhcmd1bWVudCBpcyBudWxsIG9yIHVuZGVmaW5lZC4iKTsKICBpZiAobm9kZS5ub2RlVHlwZSA9PSBudWxsKSAgICAgdGhyb3coImJsaW5rOiBhcmd1bWVudCBtdXN0IGJlIGEgbm9kZS4iKTsKICBpZiAobm9kZS5ub2RlVHlwZSA9PSAzKSAgICAgICAgdGhyb3coImJsaW5rOiBhcmd1bWVudCBtdXN0IG5vdCBiZSBhIHRleHQgbm9kZSIpOwogIGlmIChub2RlLmRvY3VtZW50RWxlbWVudCkgICAgICB0aHJvdygiYmxpbms6IGFyZ3VtZW50IG11c3Qgbm90IGJlIHRoZSBkb2N1bWVudCBvYmplY3QiKTsKCiAgZnVuY3Rpb24gc2V0T3V0bGluZShvKSB7CiAgICByZXR1cm4gZnVuY3Rpb24oKSB7CiAgICAgIGlmIChub2RlLnN0eWxlLm91dGxpbmUgIT0gbm9kZS5zdHlsZS5ib2d1c1Byb3BlcnR5KSB7CiAgICAgICAgLy8gYnJvd3NlciBzdXBwb3J0cyBvdXRsaW5lIChGaXJlZm94IDEuMSBhbmQgbmV3ZXIsIENTUzMsIE9wZXJhIDgpLgogICAgICAgIG5vZGUuc3R5bGUub3V0bGluZSA9IG87CiAgICAgIH0KICAgICAgZWxzZSBpZiAobm9kZS5zdHlsZS5Nb3pPdXRsaW5lICE9IG5vZGUuc3R5bGUuYm9ndXNQcm9wZXJ0eSkgewogICAgICAgIC8vIGJyb3dzZXIgc3VwcG9ydHMgTW96T3V0bGluZSAoRmlyZWZveCAxLjAueCBhbmQgb2xkZXIpCiAgICAgICAgbm9kZS5zdHlsZS5Nb3pPdXRsaW5lID0gbzsKICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICAvLyBicm93c2VyIG9ubHkgc3VwcG9ydHMgYm9yZGVyIChJRSkuIGJvcmRlciBpcyBhIGZhbGxiYWNrIGJlY2F1c2UgaXQgbW92ZXMgdGhpbmdzIGFyb3VuZC4KICAgICAgICBub2RlLnN0eWxlLmJvcmRlciA9IG87CiAgICAgIH0KICAgIH0KICB9CgogIGZ1bmN0aW9uIGZvY3VzSXQoYSkgewogICAgcmV0dXJuIGZ1bmN0aW9uKCkgewogICAgICBhLmZvY3VzKCk7CiAgICB9CiAgfQoKICBpZiAobm9kZS5vd25lckRvY3VtZW50KSB7CiAgICB2YXIgd2luZG93VG9Gb2N1c05vdyA9IChub2RlLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcgfHwgbm9kZS5vd25lckRvY3VtZW50LnBhcmVudFdpbmRvdyk7IC8vIE1veiB2cy4gSUUKICAgIGlmICh3aW5kb3dUb0ZvY3VzTm93KQogICAgICBzZXRUaW1lb3V0KGZvY3VzSXQod2luZG93VG9Gb2N1c05vdy50b3ApLCAwKTsKICB9CgogIGZvcih2YXIgaT0xO2k8NzsrK2kpCiAgICBzZXRUaW1lb3V0KHNldE91dGxpbmUoKGklMik/JzNweCBzb2xpZCByZWQnOidub25lJyksIGkqMTAwKTsKCiAgc2V0VGltZW91dChmb2N1c0l0KHdpbmRvdyksIDgwMCk7CiAgc2V0VGltZW91dChmb2N1c0l0KF9pbiksIDgxMCk7Cn0sCgpzY29wZSA6IGZ1bmN0aW9uIHNjb3BlKHNjKQp7CiAgaWYgKCFzYykgc2MgPSB7fTsKICBfc2NvcGUgPSBzYzsKICBwcmludGxuKCJTY29wZSBpcyBub3cgIiArIHNjICsgIi4gIElmIGEgdmFyaWFibGUgaXMgbm90IGZvdW5kIGluIHRoaXMgc2NvcGUsIHdpbmRvdyB3aWxsIGFsc28gYmUgc2VhcmNoZWQuICBOZXcgdmFyaWFibGVzIHdpbGwgc3RpbGwgZ28gb24gd2luZG93LiIsICJtZXNzYWdlIik7Cn0sCgptYXRoSGVscCA6IGZ1bmN0aW9uIG1hdGhIZWxwKCkKewogIHByaW50V2l0aFJ1bmluKCJNYXRoIGNvbnN0YW50cyIsICJFLCBMTjIsIExOMTAsIExPRzJFLCBMT0cxMEUsIFBJLCBTUVJUMV8yLCBTUVJUMiIsICJwcm9wTGlzdCIpOwogIHByaW50V2l0aFJ1bmluKCJNYXRoIG1ldGhvZHMiLCAiYWJzLCBhY29zLCBhc2luLCBhdGFuLCBhdGFuMiwgY2VpbCwgY29zLCBleHAsIGZsb29yLCBsb2csIG1heCwgbWluLCBwb3csIHJhbmRvbSwgcm91bmQsIHNpbiwgc3FydCwgdGFuIiwgInByb3BMaXN0Iik7Cn0sCgphbnMgOiB1bmRlZmluZWQKfTsKCgpmdW5jdGlvbiBoaXN0KHVwKQp7CiAgLy8gaGlzdExpc3RbMF0gPSBmaXJzdCBjb21tYW5kIGVudGVyZWQsIFsxXSA9IHNlY29uZCwgZXRjLgogIC8vIHR5cGUgc29tZXRoaW5nLCBwcmVzcyB1cCAtLT4gdGhpbmcgdHlwZWQgaXMgbm93IGluICJsaW1ibyIKICAvLyAobGFzdCBpdGVtIGluIGhpc3RMaXN0KSBhbmQgc2hvdWxkIGJlIHJlYWNoYWJsZSBieSBwcmVzc2luZwogIC8vIGRvd24gYWdhaW4uCgogIHZhciBMID0gaGlzdExpc3QubGVuZ3RoOwoKICBpZiAoTCA9PSAxKQogICAgcmV0dXJuOwoKICBpZiAodXApCiAgewogICAgaWYgKGhpc3RQb3MgPT0gTC0xKQogICAgewogICAgICAvLyBTYXZlIHRoaXMgZW50cnkgaW4gY2FzZSB0aGUgdXNlciBoaXRzIHRoZSBkb3duIGtleS4KICAgICAgaGlzdExpc3RbaGlzdFBvc10gPSBfaW4udmFsdWU7CiAgICB9CgogICAgaWYgKGhpc3RQb3MgPiAwKQogICAgewogICAgICBoaXN0UG9zLS07CiAgICAgIC8vIFVzZSBhIHRpbWVvdXQgdG8gcHJldmVudCB1cCBmcm9tIG1vdmluZyBjdXJzb3Igd2l0aGluIG5ldyB0ZXh0CiAgICAgIC8vIFNldCB0byBub3RoaW5nIGZpcnN0IGZvciB0aGUgc2FtZSByZWFzb24KICAgICAgc2V0VGltZW91dCgKICAgICAgICBmdW5jdGlvbigpIHsKICAgICAgICAgIF9pbi52YWx1ZSA9ICcnOwogICAgICAgICAgX2luLnZhbHVlID0gaGlzdExpc3RbaGlzdFBvc107CiAgICAgICAgICB2YXIgY2FyZXRQb3MgPSBfaW4udmFsdWUubGVuZ3RoOwogICAgICAgICAgaWYgKF9pbi5zZXRTZWxlY3Rpb25SYW5nZSkKICAgICAgICAgICAgX2luLnNldFNlbGVjdGlvblJhbmdlKGNhcmV0UG9zLCBjYXJldFBvcyk7CiAgICAgICAgfSwKICAgICAgICAwCiAgICAgICk7CiAgICB9CiAgfQogIGVsc2UgLy8gZG93bgogIHsKICAgIGlmIChoaXN0UG9zIDwgTC0xKQogICAgewogICAgICBoaXN0UG9zKys7CiAgICAgIF9pbi52YWx1ZSA9IGhpc3RMaXN0W2hpc3RQb3NdOwogICAgfQogICAgZWxzZSBpZiAoaGlzdFBvcyA9PSBMLTEpCiAgICB7CiAgICAgIC8vIEFscmVhZHkgb24gdGhlIGN1cnJlbnQgZW50cnk6IGNsZWFyIGJ1dCBzYXZlCiAgICAgIGlmIChfaW4udmFsdWUpCiAgICAgIHsKICAgICAgICBoaXN0TGlzdFtoaXN0UG9zXSA9IF9pbi52YWx1ZTsKICAgICAgICArK2hpc3RQb3M7CiAgICAgICAgX2luLnZhbHVlID0gIiI7CiAgICAgIH0KICAgIH0KICB9Cn0KCmZ1bmN0aW9uIHRhYmNvbXBsZXRlKCkKewogIC8qCiAgICogV29ya2luZyBiYWNrd2FyZHMgZnJvbSBzW2Zyb21dLCBmaW5kIHRoZSBzcG90CiAgICogd2hlcmUgdGhpcyBleHByZXNzaW9uIHN0YXJ0cy4gIEl0IHdpbGwgc2NhbgogICAqIHVudGlsIGl0IGhpdHMgYSBtaXNtYXRjaGVkICggb3IgYSBzcGFjZSwKICAgKiBidXQgaXQgc2tpcHMgb3ZlciBxdW90ZWQgc3RyaW5ncy4KICAgKiBJZiBzdG9wQXREb3QgaXMgdHJ1ZSwgc3RvcCBhdCBhICcuJwogICAqLwogIGZ1bmN0aW9uIGZpbmRiZWdpbm5pbmcocywgZnJvbSwgc3RvcEF0RG90KQogIHsKICAgIC8qCiAgICAgKiAgQ29tcGxpY2F0ZWQgZnVuY3Rpb24uCiAgICAgKgogICAgICogIFJldHVybiB0cnVlIGlmIHNbaV0gPT0gcSBCVVQgT05MWSBJRgogICAgICogIHNbaS0xXSBpcyBub3QgYSBiYWNrc2xhc2guCiAgICAgKi8KICAgIGZ1bmN0aW9uIGVxdWFsQnV0Tm90RXNjYXBlZChzLGkscSkKICAgIHsKICAgICAgaWYocy5jaGFyQXQoaSkgIT0gcSkgLy8gbm90IGVxdWFsIGdvIG5vIGZ1cnRoZXIKICAgICAgICByZXR1cm4gZmFsc2U7CgogICAgICBpZihpPT0wKSAvLyBiZWdpbm5pbmcgb2Ygc3RyaW5nCiAgICAgICAgcmV0dXJuIHRydWU7CgogICAgICBpZihzLmNoYXJBdChpLTEpID09ICdcXCcpIC8vIGVzY2FwZWQ/CiAgICAgICAgcmV0dXJuIGZhbHNlOwoKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgdmFyIG5wYXJlbnMgPSAwOwogICAgdmFyIGk7CiAgICBmb3IoaT1mcm9tOyBpPj0wOyBpLS0pCiAgICB7CiAgICAgIGlmKHMuY2hhckF0KGkpID09ICcgJykKICAgICAgICBicmVhazsKCiAgICAgIGlmKHN0b3BBdERvdCAmJiBzLmNoYXJBdChpKSA9PSAnLicpCiAgICAgICAgYnJlYWs7CgogICAgICBpZihzLmNoYXJBdChpKSA9PSAnKScpCiAgICAgICAgbnBhcmVucysrOwogICAgICBlbHNlIGlmKHMuY2hhckF0KGkpID09ICcoJykKICAgICAgICBucGFyZW5zLS07CgogICAgICBpZihucGFyZW5zIDwgMCkKICAgICAgICBicmVhazsKCiAgICAgIC8vIHNraXAgcXVvdGVkIHN0cmluZ3MKICAgICAgaWYocy5jaGFyQXQoaSkgPT0gJ1wnJyB8fCBzLmNoYXJBdChpKSA9PSAnXCInKQogICAgICB7CiAgICAgICAgLy9kdW1wKCJza2lwcGluZyBxdW90ZWQgY2hhcnM6ICIpOwogICAgICAgIHZhciBxdW90ID0gcy5jaGFyQXQoaSk7CiAgICAgICAgaS0tOwogICAgICAgIHdoaWxlKGkgPj0gMCAmJiAhZXF1YWxCdXROb3RFc2NhcGVkKHMsaSxxdW90KSkgewogICAgICAgICAgLy9kdW1wKHMuY2hhckF0KGkpKTsKICAgICAgICAgIGktLTsKICAgICAgICB9CiAgICAgICAgLy9kdW1wKCJcbiIpOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gaTsKICB9CgogIC8vIFhYWCBzaG91bGQgYmUgdXNlZCBtb3JlIGNvbnNpc3RlbnRseSAoaW5zdGVhZCBvZiB1c2luZyBzZWxlY3Rpb25TdGFydC9zZWxlY3Rpb25FbmQgdGhyb3VnaG91dCBjb2RlKQogIC8vIFhYWCBkb2Vzbid0IHdvcmsgaW4gSUUsIGV2ZW4gdGhvdWdoIGl0IGNvbnRhaW5zIElFLXNwZWNpZmljIGNvZGUKICBmdW5jdGlvbiBnZXRjYXJldHBvcyhpbnApCiAgewogICAgaWYoaW5wLnNlbGVjdGlvbkVuZCAhPSBudWxsKQogICAgICByZXR1cm4gaW5wLnNlbGVjdGlvbkVuZDsKCiAgICBpZihpbnAuY3JlYXRlVGV4dFJhbmdlKQogICAgewogICAgICB2YXIgZG9jcmFuZ2UgPSBfd2luLlNoZWxsLmRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpOwogICAgICB2YXIgaW5wcmFuZ2UgPSBpbnAuY3JlYXRlVGV4dFJhbmdlKCk7CiAgICAgIGlmIChpbnByYW5nZS5zZXRFbmRQb2ludCkKICAgICAgewogICAgICAgIGlucHJhbmdlLnNldEVuZFBvaW50KCdFbmRUb1N0YXJ0JywgZG9jcmFuZ2UpOwogICAgICAgIHJldHVybiBpbnByYW5nZS50ZXh0Lmxlbmd0aDsKICAgICAgfQogICAgfQoKICAgIHJldHVybiBpbnAudmFsdWUubGVuZ3RoOyAvLyBzdWNrcywgcHVudAogIH0KCiAgZnVuY3Rpb24gc2V0c2VsZWN0aW9udG8oaW5wLHBvcykKICB7CiAgICBpZihpbnAuc2VsZWN0aW9uU3RhcnQpIHsKICAgICAgaW5wLnNlbGVjdGlvblN0YXJ0ID0gaW5wLnNlbGVjdGlvbkVuZCA9IHBvczsKICAgIH0KICAgIGVsc2UgaWYoaW5wLmNyZWF0ZVRleHRSYW5nZSkgewogICAgICB2YXIgZG9jcmFuZ2UgPSBfd2luLlNoZWxsLmRvY3VtZW50LnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpOwogICAgICB2YXIgaW5wcmFuZ2UgPSBpbnAuY3JlYXRlVGV4dFJhbmdlKCk7CiAgICAgIGlucHJhbmdlLm1vdmUoJ2NoYXJhY3RlcicscG9zKTsKICAgICAgaW5wcmFuZ2Uuc2VsZWN0KCk7CiAgICB9CiAgICBlbHNlIHsgLy8gZXJyLi4uCiAgICAvKgogICAgICBpbnAuc2VsZWN0KCk7CiAgICAgIGlmKF93aW4uU2hlbGwuZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCkpCiAgICAgICAgX3dpbi5TaGVsbC5kb2N1bWVudC5nZXRTZWxlY3Rpb24oKSA9ICIiOwogICAgICAgICovCiAgICB9CiAgfQogICAgLy8gZ2V0IHBvc2l0aW9uIG9mIGN1cnNvciB3aXRoaW4gdGhlIGlucHV0IGJveAogICAgdmFyIGNhcmV0ID0gZ2V0Y2FyZXRwb3MoX2luKTsKCiAgICBpZihjYXJldCkgewogICAgICAvL2R1bXAoIi0tLS1cbiIpOwogICAgICB2YXIgZG90cG9zLCBzcGFjZXBvcywgY29tcGxldGUsIG9iajsKICAgICAgLy9kdW1wKCJjYXJldCBwb3M6ICIgKyBjYXJldCArICJcbiIpOwogICAgICAvLyBzZWUgaWYgdGhlcmUncyBhIGRvdCBiZWZvcmUgaGVyZQogICAgICBkb3Rwb3MgPSBmaW5kYmVnaW5uaW5nKF9pbi52YWx1ZSwgY2FyZXQtMSwgdHJ1ZSk7CiAgICAgIC8vZHVtcCgiZG90IHBvczogIiArIGRvdHBvcyArICJcbiIpOwogICAgICBpZihkb3Rwb3MgPT0gLTEgfHwgX2luLnZhbHVlLmNoYXJBdChkb3Rwb3MpICE9ICcuJykgewogICAgICAgIGRvdHBvcyA9IGNhcmV0OwovL2R1bXAoImNoYW5nZWQgZG90IHBvczogIiArIGRvdHBvcyArICJcbiIpOwogICAgICB9CgogICAgICAvLyBsb29rIGJhY2t3YXJkcyBmb3IgYSBub24tdmFyaWFibGUtbmFtZSBjaGFyYWN0ZXIKICAgICAgc3BhY2Vwb3MgPSBmaW5kYmVnaW5uaW5nKF9pbi52YWx1ZSwgZG90cG9zLTEsIGZhbHNlKTsKICAgICAgLy9kdW1wKCJzcGFjZSBwb3M6ICIgKyBzcGFjZXBvcyArICJcbiIpOwogICAgICAvLyBnZXQgdGhlIG9iamVjdCB3ZSdyZSB0cnlpbmcgdG8gY29tcGxldGUgb24KICAgICAgaWYoc3BhY2Vwb3MgPT0gZG90cG9zIHx8IHNwYWNlcG9zKzEgPT0gZG90cG9zIHx8IGRvdHBvcyA9PSBjYXJldCkKICAgICAgewogICAgICAgIC8vIHRyeSBjb21wbGV0aW5nIGZ1bmN0aW9uIGFyZ3MKICAgICAgICBpZihfaW4udmFsdWUuY2hhckF0KGRvdHBvcykgPT0gJygnIHx8CiAoX2luLnZhbHVlLmNoYXJBdChzcGFjZXBvcykgPT0gJygnICYmIChzcGFjZXBvcysxKSA9PSBkb3Rwb3MpKQogICAgICAgIHsKICAgICAgICAgIHZhciBmbixmbmFtZTsKICB2YXIgZnJvbSA9IChfaW4udmFsdWUuY2hhckF0KGRvdHBvcykgPT0gJygnKSA/IGRvdHBvcyA6IHNwYWNlcG9zOwogICAgICAgICAgc3BhY2Vwb3MgPSBmaW5kYmVnaW5uaW5nKF9pbi52YWx1ZSwgZnJvbS0xLCBmYWxzZSk7CgogICAgICAgICAgZm5hbWUgPSBfaW4udmFsdWUuc3Vic3RyKHNwYWNlcG9zKzEsZnJvbS0oc3BhY2Vwb3MrMSkpOwogIC8vZHVtcCgiZm5hbWU6ICIgKyBmbmFtZSArICJcbiIpOwogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgd2l0aChfd2luLlNoZWxsLl9zY29wZSkKICAgICAgICAgICAgICB3aXRoKF93aW4pCiAgICAgICAgICAgICAgICB3aXRoKFNoZWxsLnNoZWxsQ29tbWFuZHMpCiAgICAgICAgICAgICAgICAgIGZuID0gZXZhbChmbmFtZSk7CiAgICAgICAgICB9CiAgICAgICAgICBjYXRjaChlcikgewogICAgICAgICAgICAvL2R1bXAoJ2ZuIGlzIG5vdCBhIHZhbGlkIG9iamVjdFxuJyk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICAgIGlmKGZuID09IHVuZGVmaW5lZCkgewogICAgICAgICAgICAgLy9kdW1wKCdmbiBpcyB1bmRlZmluZWQnKTsKICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICAgIGlmKGZuIGluc3RhbmNlb2YgRnVuY3Rpb24pCiAgICAgICAgICB7CiAgICAgICAgICAgIC8vIFByaW50IGZ1bmN0aW9uIGRlZmluaXRpb24sIGluY2x1ZGluZyBhcmd1bWVudCBuYW1lcywgYnV0IG5vdCBmdW5jdGlvbiBib2R5CiAgICAgICAgICAgIGlmKCFmbi50b1N0cmluZygpLm1hdGNoKC9mdW5jdGlvbiAuKz9cKFwpICtce1xuICtcW25hdGl2ZSBjb2RlXF1cblx9LykpCiAgICAgICAgICAgICAgcHJpbnRsbihmbi50b1N0cmluZygpLm1hdGNoKC9mdW5jdGlvbiAuKz9cKC4qP1wpLyksICJ0YWJjb21wbGV0ZSIpOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgZWxzZQogICAgICAgICAgb2JqID0gX3dpbjsKICAgICAgfQogICAgICBlbHNlCiAgICAgIHsKICAgICAgICB2YXIgb2JqbmFtZSA9IF9pbi52YWx1ZS5zdWJzdHIoc3BhY2Vwb3MrMSxkb3Rwb3MtKHNwYWNlcG9zKzEpKTsKICAgICAgICAvL2R1bXAoIm9iam5hbWU6IHwiICsgb2JqbmFtZSArICJ8XG4iKTsKICAgICAgICB0cnkgewogICAgICAgICAgd2l0aChfd2luLlNoZWxsLl9zY29wZSkKICAgICAgICAgICAgd2l0aChfd2luKQogICAgICAgICAgICAgICAgb2JqID0gZXZhbChvYmpuYW1lKTsKICAgICAgICB9CiAgICAgICAgY2F0Y2goZXIpIHsKICAgICAgICAgIHByaW50RXJyb3IoZXIpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBpZihvYmogPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAvLyBzb21ldGltZXMgdGhpcyBpcyB0YWJjb21wbGV0ZSdzIGZhdWx0LCBzbyBkb24ndCBwcmludCBpdCA6KAogICAgICAgICAgLy8gZS5nLiBjb21wbGV0aW5nIGZyb20gInByaW50KGRvY3VtZW50LmdldEVsZW1lbnRzIgogICAgICAgICAgLy8gcHJpbnRsbigiQ2FuJ3QgY29tcGxldGUgZnJvbSBudWxsIG9yIHVuZGVmaW5lZCBleHByZXNzaW9uICIgKyBvYmpuYW1lLCAiZXJyb3IiKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgIH0KICAgICAgLy9kdW1wKCJvYmo6ICIgKyBvYmogKyAiXG4iKTsKICAgICAgLy8gZ2V0IHRoZSB0aGluZyB3ZSdyZSB0cnlpbmcgdG8gY29tcGxldGUKICAgICAgaWYoZG90cG9zID09IGNhcmV0KQogICAgICB7CiAgICAgICAgaWYoc3BhY2Vwb3MrMSA9PSBkb3Rwb3MgfHwgc3BhY2Vwb3MgPT0gZG90cG9zKQogICAgICAgIHsKICAgICAgICAgIC8vIG5vdGhpbmcgdG8gY29tcGxldGUKICAgICAgICAgIC8vZHVtcCgibm90aGluZyB0byBjb21wbGV0ZVxuIik7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBjb21wbGV0ZSA9IF9pbi52YWx1ZS5zdWJzdHIoc3BhY2Vwb3MrMSxkb3Rwb3MtKHNwYWNlcG9zKzEpKTsKICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICBjb21wbGV0ZSA9IF9pbi52YWx1ZS5zdWJzdHIoZG90cG9zKzEsY2FyZXQtKGRvdHBvcysxKSk7CiAgICAgIH0KICAgICAgLy9kdW1wKCJjb21wbGV0ZTogIiArIGNvbXBsZXRlICsgIlxuIik7CiAgICAgIC8vIG9rLCBub3cgbG9vayBhdCBhbGwgdGhlIHByb3BzL21ldGhvZHMgb2YgdGhpcyBvYmoKICAgICAgLy8gYW5kIGZpbmQgb25lcyBzdGFydGluZyB3aXRoICdjb21wbGV0ZScKICAgICAgdmFyIG1hdGNoZXMgPSBbXTsKICAgICAgdmFyIGJlc3RtYXRjaCA9IG51bGw7CiAgICAgIGZvcih2YXIgYSBpbiBvYmopCiAgICAgIHsKICAgICAgICAvL2EgPSBhLnRvU3RyaW5nKCk7CiAgICAgICAgLy9YWFg6IG1ha2luZyBpdCBsb3dlcmNhc2UgY291bGQgaGVscCBzb21lIGNhc2VzLAogICAgICAgIC8vIGJ1dCBzY3Jld3MgdXAgbXkgZ2VuZXJhbCBsb2dpYy4KICAgICAgICBpZihhLnN1YnN0cigwLGNvbXBsZXRlLmxlbmd0aCkgPT0gY29tcGxldGUpIHsKICAgICAgICAgIG1hdGNoZXMucHVzaChhKTsKICAgICAgICAgIC8vLy9kdW1wKCJtYXRjaDogIiArIGEgKyAiXG4iKTsKICAgICAgICAgIC8vIGlmIG5vIGJlc3QgbWF0Y2gsIHRoaXMgaXMgdGhlIGJlc3QgbWF0Y2gKICAgICAgICAgIGlmKGJlc3RtYXRjaCA9PSBudWxsKQogICAgICAgICAgewogICAgICAgICAgICBiZXN0bWF0Y2ggPSBhOwogICAgICAgICAgfQogICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIC8vIHRoZSBiZXN0IG1hdGNoIGlzIHRoZSBsb25nZXN0IGNvbW1vbiBzdHJpbmcKICAgICAgICAgICAgZnVuY3Rpb24gbWluKGEsYil7IHJldHVybiAoKGE8Yik/YTpiKTsgfQogICAgICAgICAgICB2YXIgaTsKICAgICAgICAgICAgZm9yKGk9MDsgaTwgbWluKGJlc3RtYXRjaC5sZW5ndGgsIGEubGVuZ3RoKTsgaSsrKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgaWYoYmVzdG1hdGNoLmNoYXJBdChpKSAhPSBhLmNoYXJBdChpKSkKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGJlc3RtYXRjaCA9IGJlc3RtYXRjaC5zdWJzdHIoMCxpKTsKICAgICAgICAgICAgLy8vL2R1bXAoImJlc3RtYXRjaCBsZW46ICIgKyBpICsgIlxuIik7CiAgICAgICAgICB9CiAgICAgICAgICAvLy8vZHVtcCgiYmVzdG1hdGNoOiAiICsgYmVzdG1hdGNoICsgIlxuIik7CiAgICAgICAgfQogICAgICB9CiAgICAgIGJlc3RtYXRjaCA9IChiZXN0bWF0Y2ggfHwgIiIpOwogICAgICAvLy8vZHVtcCgibWF0Y2hlczogIiArIG1hdGNoZXMgKyAiXG4iKTsKICAgICAgdmFyIG9iakFuZENvbXBsZXRlID0gKG9iam5hbWUgfHwgb2JqKSArICIuIiArIGJlc3RtYXRjaDsKICAgICAgLy9kdW1wKCJtYXRjaGVzLmxlbmd0aDogIiArIG1hdGNoZXMubGVuZ3RoICsgIiwgdG9vTWFueU1hdGNoZXM6ICIgKyB0b29NYW55TWF0Y2hlcyArICIsIG9iakFuZENvbXBsZXRlOiAiICsgb2JqQW5kQ29tcGxldGUgKyAiXG4iKTsKICAgICAgaWYobWF0Y2hlcy5sZW5ndGggPiAxICYmICh0b29NYW55TWF0Y2hlcyA9PSBvYmpBbmRDb21wbGV0ZSB8fCBtYXRjaGVzLmxlbmd0aCA8PSAxMCkpIHsKCiAgICAgICAgcHJpbnRXaXRoUnVuaW4oIk1hdGNoZXM6ICIsIG1hdGNoZXMuam9pbignLCAnKSwgInRhYmNvbXBsZXRlIik7CiAgICAgICAgdG9vTWFueU1hdGNoZXMgPSBudWxsOwogICAgICB9CiAgICAgIGVsc2UgaWYobWF0Y2hlcy5sZW5ndGggPiAxMCkKICAgICAgewogICAgICAgIHByaW50bG4obWF0Y2hlcy5sZW5ndGggKyAiIG1hdGNoZXMuICBQcmVzcyB0YWIgYWdhaW4gdG8gc2VlIHRoZW0gYWxsIiwgInRhYmNvbXBsZXRlIik7CiAgICAgICAgdG9vTWFueU1hdGNoZXMgPSBvYmpBbmRDb21wbGV0ZTsKICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICB0b29NYW55TWF0Y2hlcyA9IG51bGw7CiAgICAgIH0KICAgICAgaWYoYmVzdG1hdGNoICE9ICIiKQogICAgICB7CiAgICAgICAgdmFyIHNzdGFydDsKICAgICAgICBpZihkb3Rwb3MgPT0gY2FyZXQpIHsKICAgICAgICAgIHNzdGFydCA9IHNwYWNlcG9zKzE7CiAgICAgICAgfQogICAgICAgIGVsc2UgewogICAgICAgICAgc3N0YXJ0ID0gZG90cG9zKzE7CiAgICAgICAgfQogICAgICAgIF9pbi52YWx1ZSA9IF9pbi52YWx1ZS5zdWJzdHIoMCwgc3N0YXJ0KQogICAgICAgICAgICAgICAgICArIGJlc3RtYXRjaAogICAgICAgICAgICAgICAgICArIF9pbi52YWx1ZS5zdWJzdHIoY2FyZXQpOwogICAgICAgIHNldHNlbGVjdGlvbnRvKF9pbixjYXJldCArIChiZXN0bWF0Y2gubGVuZ3RoIC0gY29tcGxldGUubGVuZ3RoKSk7CiAgICAgIH0KICAgIH0KfQoKZnVuY3Rpb24gcHJpbnRRdWVzdGlvbihxKQp7CiAgcHJpbnRsbihxLCAiaW5wdXQiKTsKfQoKZnVuY3Rpb24gcHJpbnRBbnN3ZXIoYSkKewogIGlmIChhICE9PSB1bmRlZmluZWQpIHsKICAgIHByaW50bG4oYSwgIm5vcm1hbE91dHB1dCIpOwogICAgc2hlbGxDb21tYW5kcy5hbnMgPSBhOwogIH0KfQoKZnVuY3Rpb24gcHJpbnRFcnJvcihlcikKewogIHZhciBsaW5lTnVtYmVyU3RyaW5nOwoKICBsYXN0RXJyb3IgPSBlcjsgLy8gZm9yIGRlYnVnZ2luZyB0aGUgc2hlbGwKICBpZiAoZXIubmFtZSkKICB7CiAgICAvLyBsaW5lTnVtYmVyU3RyaW5nIHNob3VsZCBub3QgYmUgIiIsIHRvIGF2b2lkIGEgdmVyeSB3YWNreSBidWcgaW4gSUUgNi4KICAgIGxpbmVOdW1iZXJTdHJpbmcgPSAoZXIubGluZU51bWJlciAhPSB1bmRlZmluZWQpID8gKCIgb24gbGluZSAiICsgZXIubGluZU51bWJlciArICI6ICIpIDogIjogIjsKICAgIHByaW50bG4oZXIubmFtZSArIGxpbmVOdW1iZXJTdHJpbmcgKyBlci5tZXNzYWdlLCAiZXJyb3IiKTsgLy8gQmVjYXVzZSBJRSBkb2Vzbid0IGhhdmUgZXJyb3IudG9TdHJpbmcuCiAgfQogIGVsc2UKICAgIHByaW50bG4oZXIsICJlcnJvciIpOyAvLyBCZWNhdXNlIHNlY3VyaXR5IGVycm9ycyBpbiBNb3ogL29ubHkvIGhhdmUgdG9TdHJpbmcuCn0KCmZ1bmN0aW9uIGdvKHMpCnsKICBfaW4udmFsdWUgPSBxdWVzdGlvbiA9IHMgPyBzIDogX2luLnZhbHVlOwoKICBpZiAocXVlc3Rpb24gPT0gIiIpCiAgICByZXR1cm47CgogIGhpc3RMaXN0W2hpc3RMaXN0Lmxlbmd0aC0xXSA9IHF1ZXN0aW9uOwogIGhpc3RMaXN0W2hpc3RMaXN0Lmxlbmd0aF0gPSAiIjsKICBoaXN0UG9zID0gaGlzdExpc3QubGVuZ3RoIC0gMTsKCiAgLy8gVW5mb3J0dW5hdGVseSwgdGhpcyBoYXMgdG8gaGFwcGVuICpiZWZvcmUqIHRoZSBKYXZhU2NyaXB0IGlzIHJ1biwgc28gdGhhdAogIC8vIHByaW50KCkgb3V0cHV0IHdpbGwgZ28gaW4gdGhlIHJpZ2h0IHBsYWNlLgogIF9pbi52YWx1ZT0nJzsKICByZWNhbGN1bGF0ZUlucHV0SGVpZ2h0KCk7CiAgcHJpbnRRdWVzdGlvbihxdWVzdGlvbik7CgogIGlmIChfd2luLmNsb3NlZCkgewogICAgcHJpbnRFcnJvcigiVGFyZ2V0IHdpbmRvdyBoYXMgYmVlbiBjbG9zZWQuIik7CiAgICByZXR1cm47CiAgfQoKICB0cnkgeyAoIlNoZWxsIiBpbiBfd2luKSB9CiAgY2F0Y2goZXIpIHsKICAgIHByaW50RXJyb3IoIlRoZSBKYXZhU2NyaXB0IFNoZWxsIGNhbm5vdCBhY2Nlc3MgdmFyaWFibGVzIGluIHRoZSB0YXJnZXQgd2luZG93LiAgVGhlIG1vc3QgbGlrZWx5IHJlYXNvbiBpcyB0aGF0IHRoZSB0YXJnZXQgd2luZG93IG5vdyBoYXMgYSBkaWZmZXJlbnQgcGFnZSBsb2FkZWQgYW5kIHRoYXQgcGFnZSBoYXMgYSBkaWZmZXJlbnQgaG9zdG5hbWUgdGhhbiB0aGUgb3JpZ2luYWwgcGFnZS4iKTsKICAgIHJldHVybjsKICB9CgogIGlmICghKCJTaGVsbCIgaW4gX3dpbikpCiAgICBpbml0VGFyZ2V0KCk7IC8vIHNpbGVudAoKICAvLyBFdmFsdWF0ZSBTaGVsbC5xdWVzdGlvbiB1c2luZyBfd2luJ3MgZXZhbCAodGhpcyBpcyB3aHkgZXZhbCBpc24ndCBpbiB0aGUgfHdpdGh8LCBJSVJDKS4KICBfd2luLmxvY2F0aW9uLmhyZWYgPSAiamF2YXNjcmlwdDp0cnl7IFNoZWxsLnByaW50QW5zd2VyKGV2YWwoJ3dpdGgoU2hlbGwuX3Njb3BlKSB3aXRoKFNoZWxsLnNoZWxsQ29tbWFuZHMpIHsnICsgU2hlbGwucXVlc3Rpb24gKyBTdHJpbmcuZnJvbUNoYXJDb2RlKDEwKSArICd9JykpOyB9IGNhdGNoKGVyKSB7IFNoZWxsLnByaW50RXJyb3IoZXIpOyB9OyBzZXRUaW1lb3V0KFNoZWxsLnJlZm9jdXMsIDApOyB2b2lkIDAiOwp9Cgo8L3NjcmlwdD4KCjwhLS0gZm9yIGh0dHA6Ly90ZWQubWllbGN6YXJlay5vcmcvY29kZS9tb3ppbGxhL2V4dGVuc2lvbmRldi8gLS0+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImNocm9tZTovL2V4dGVuc2lvbmRldi9jb250ZW50L3JkZmhpc3RvcnkuanMiPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJjaHJvbWU6Ly9leHRlbnNpb25kZXYvY29udGVudC9jaHJvbWVTaGVsbEV4dHJhcy5qcyI+PC9zY3JpcHQ+Cgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgYm9keSB7IGJhY2tncm91bmQ6IGJsYWNrOyBjb2xvcjogYmxhY2s7IH0KICAgIAogICAgI291dHB1dCB7IHdoaXRlLXNwYWNlOiBwcmU7IHdoaXRlLXNwYWNlOiAtbW96LXByZS13cmFwOyBoZWlnaHQ6IDQ1dmg7IGJhY2tncm91bmQtY29sb3I6IHJnYigzNywgMzcsIDM3KTsgb3ZlcmZsb3c6IGF1dG87fSAvKiBQcmVzZXJ2ZSBsaW5lIGJyZWFrcywgYnV0IHdyYXAgdG9vIGlmIGJyb3dzZXIgc3VwcG9ydHMgaXQgKi8KICAgIGgzIHsgbWFyZ2luLXRvcDogMDsgbWFyZ2luLWJvdHRvbTogMGVtOyB9CiAgICBoMyArIGRpdiB7IG1hcmdpbjogMDsgfQogICAgCiAgICBmb3JtIHsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyB9CiAgICAjaW5wdXQgeyB3aWR0aDogMTAwJTsgYm9yZGVyOiBub25lOyBwYWRkaW5nOiAwOyBvdmVyZmxvdzogYXV0bzsgYm9yZGVyLXN0eWxlOiBzb2xpZDsgYm9yZGVyLXdpZHRoOiAxcHg7IGhlaWdodDogMjUwcHg7IGJhY2tncm91bmQ6IGJsYWNrOyBib3JkZXItY29sb3I6IGdyZWVuO30KICAgICNpbnB1dDpmb2N1cyB7CiAgICAgIG91dGxpbmU6IG5vbmU7CiAgICAgIGJvcmRlci1jb2xvcjogcmdiYSgwLCAyNTUsIDAsIDAuNTg5KTsKICAgIH0KICAgIC5pbnB1dCB7IGNvbG9yOiBsaW1lOyAgZm9udDogaW5oZXJpdDsgZm9udC13ZWlnaHQ6IGJvbGQ7IG1hcmdpbi10b3A6IC41ZW07IC8qIGJhY2tncm91bmQ6ICNFNkU2RkY7ICovIH0KICAgIC5ub3JtYWxPdXRwdXQgeyBjb2xvcjogbGltZTsgIH0KICAgIC5wcmludCB7IGNvbG9yOiByZ2IoMCwgMTU1LCAwKTsgIH0KICAgIC5lcnJvciB7IGNvbG9yOiByZWQ7ICBtYXJnaW4tdG9wOiA1cHg7fQogICAgLnByb3BMaXN0IHsgY29sb3I6IGdyZWVuOyAgfQogICAgLm1lc3NhZ2UgeyBjb2xvcjogZ3JlZW47ICB9CiAgICAudGFiY29tcGxldGUgeyBjb2xvcjogcHVycGxlOyAgfQogICAgCiAgICAKICAgIGJvZHkgewogICAgICAgIGNvbG9yOiBsaW1lOwogICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwogICAgICAgIGZvbnQtc2l6ZTogbGFyZ2U7CiAgICAgICAgZm9udC1mYW1pbHk6ICc4Yml0JzsKICAgIH0KICAgIAogICAgLmJ0biB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwogICAgICBjb2xvcjogbGltZTsKICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDsKICAgICAgYm9yZGVyLWNvbG9yOiBncmVlbjsKICAgICAgcGFkZGluZzogNHB4OwogICAgICBtYXJnaW4tbGVmdDogNXB4OwogICAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICB9CiAgICAuYnRuOmhvdmVyIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGltZTsKICAgICAgY29sb3I6IGJsYWNrOwogICAgfQogICAgCiAgICAKICAgIAogICAgQGZvbnQtZmFjZSB7CiAgICAgIGZvbnQtZmFtaWx5OiAnQ29ubjInOwogICAgICBzcmM6IHVybCgnLi4vQXNzZXRzL0ZvbnRzL0Nvbm5lY3Rpb25JaS0yd2o4Lm90ZicpOwogICAgfQogICAgQGZvbnQtZmFjZSB7CiAgICAgIGZvbnQtZmFtaWx5OiAnOGJpdCc7CiAgICAgIHNyYzogdXJsKCcuLi9Bc3NldHMvRm9udHMvRGlhcnlPZkFuOEJpdE1hZ2UtbFlERC50dGYnKTsKICAgIH0KICAgIEBmb250LWZhY2UgewogICAgICBmb250LWZhbWlseTogJ0NvbXB1dGVyJzsKICAgICAgc3JjOiB1cmwoJy4uL0Fzc2V0cy9Gb250cy9Db21wdXRlclBpeGVsNy1tbkwyLnR0ZicpOwogICAgfQogICAgQGZvbnQtZmFjZSB7CiAgICAgIGZvbnQtZmFtaWx5OiAnUGl4ZWxvaWQnOwogICAgICBzcmM6IHVybCgnLi4vQXNzZXRzL0ZvbnRzL1BpeGVsb2lkTW9uby0xRzhhZS50dGYnKTsKICAgIH0KICAgIDwvc3R5bGU+CiIsIkJJRCI6IiJ9',
			pages: []
		}

		PKGs.push(TestPKG);
		function RunPKG(id) {
		fd = atob(PKGs[id].index)
		Execute();
		}


	function openPKG() {
	  document.getElementById("ScriptManager").style.height = "100%";
	}
	
	function closePKG() {
	  document.getElementById("ScriptManager").style.height = "0%";
	}



function DisplayScripts() {
	var my = document.getElementById("myScripts");
	document.getElementById("C_INDEX").innerText = "Latest index: " + LatestIndex;
	document.getElementById("S_INDEX").innerText = "Latest store index: " + StoreIndex;
	my.innerHTML = "";
	for (let i =0; i < Scripts.length; i++ ) {
my.innerHTML += `
<div id="DIS`+i+`">
<button onclick="window.open('`+Scripts[i].src+`')" class="btn">`+Scripts[i].name+`</button> Loaded: <button class="Loaded `+Scripts[i].loaded+`">`+Scripts[i].loaded+`</button> <button class="loaded No" onclick="document.getElementById('LoadScript`+i+`').remove();document.getElementById('DIS`+i+`').remove();println('REMOVED: `+Scripts[i].name+`','error')">Remove</button> </div>`
	
}
}

	</script>
	 
	



	

<script defer>
setTimeout(function (){
	  
init()
	            
}, 1000); 
</script>
<style>


.btn {
padding: 10px;
min-width: 300px;
border-radius: 10px;
background-color: #555;
color: white;
margin-top: 10px;
}
.btn:hover {
background-color: #333;
}

#fileInput {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%,-60%);
    margin-left: 30px;
}

#Upload {
    background-color: #333;
    width: 50vw;
    height: 23vh;
    position: relative;
    left: 50%;
    transform: translate(-50%);
    border-radius: 10px;
}
    body {
        background-color: black;
        color: white;
        font-family: sans;
        text-align: center;
    }
</style>
<script>
	var BIOS_Ver;
	var Client_Ver;
	var BIOSfile = "";
	var b64Client = "";
	var ping = false;
	var LatestIndex = "0";
	var LatestDataIndex = "0";
	var StoreIndex = "0";
	var LoadedSrc = false;
	var CurrentBIOS = "0.0_test";
	var CurrentCver = "0.5";
	var StoreData;

	var StoreTest = {
		itemName: "Test123",
		itemDes: "a test install",
		itemEXE: ""
	}


if (localStorage.getItem("OEXE_index") !== null) {
	LatestIndex = localStorage.getItem("OEXE_index");
}
if (localStorage.getItem("OEXE_data_index") !== null) {
	LatestDataIndex = localStorage.getItem("OEXE_data_index");
}

function GetLatestIndex() {
	var num = JSON.parse(LatestIndex) + 1;
	var num2 = JSON.parse(LatestDataIndex) + 1;
	Load("Index"+num,"https://cdn.jsdelivr.net/gh/jackb0back/OEXE_COMPILER_@main/Indexes/"+num+"/Current.js");
	setTimeout(function (){
		Load("DataIndex"+num2,"https://cdn.jsdelivr.net/gh/jackb0back/OEXE_COMPILER_@main/Indexes/"+num2+"/DataIndex.js");
		LatestDataIndex = localStorage.getItem("OEXE_data_index");
}, 1000); 


	LatestIndex = localStorage.getItem("OEXE_index");

}






function GetStoreIndex() {
	var num = JSON.parse(StoreIndex) + 1;
	//https://cdn.jsdelivr.net/gh/jackb0back/OEXE_COMPILER_@main/Store/0/store.js
	Load("Store"+num,"https://cdn.jsdelivr.net/gh/jackb0back/OEXE_COMPILER_@main/Store/"+num+"/store.js");

	StoreIndex = localStorage.getItem("OEXE_store_index");

}





function Load(name,src) {
	LoadedSrc = false;
	Scripts.push({name: name, src: src, loaded: "No"});	
	var aae = Scripts.length-1;
	var jsCode = document.createElement('script'); 
	jsCode.id = "LoadScript"+aae;
	jsCode.setAttribute('src', src);      
	print("Loading: " + name + " from: " + src + "...");
  document.body.appendChild(jsCode); 
 // jsCode.onload = Loaded();
 jsCode.addEventListener("load", function(event) {
console.log(event)
 Loaded();
 });
  setTimeout(function (){
DisplayScripts();
}, 1000); 

}
function Loaded() {
	var e = Scripts.length - 1;
	Scripts[e].loaded = "Yes";
	println("successfully loaded: " + Scripts[e].src,"message");
	LoadedSrc = true;
}
function Log() {
	console.log("TEST")
}
function GetLatest() {

}





function GetFileName() {
	var fullPath = document.getElementById('fileInput').value;
if (fullPath) {
    var startIndex = (fullPath.indexOf('\\') >= 0 ? fullPath.lastIndexOf('\\') : fullPath.lastIndexOf('/'));
    var filename = fullPath.substring(startIndex);
    if (filename.indexOf('\\') === 0 || filename.indexOf('/') === 0) {
        filename = filename.substring(1);
    }
 return filename;
}
}


//SCRIPT LOADER

function Update() {
	Load("BIOS#"+LatestIndex,"https://cdn.jsdelivr.net/gh/jackb0back/OEXE_COMPILER_@main/Updates/"+LatestIndex+"/BIOS.js");
}
function LoadScripts() {
	setTimeout(function (){
		Load("DATA#"+LatestDataIndex,"https://cdn.jsdelivr.net/gh/jackb0back/OEXE_COMPILER_@main/Data/"+LatestDataIndex+"/data.js");
		setTimeout(function (){
		Load("StoreImport"+StoreIndex,"https://cdn.jsdelivr.net/gh/jackb0back/OEXE_COMPILER_@main/Store/"+StoreIndex+"/store.js");
}, 1000); 
}, 1000); 

/*
	setTimeout(function (){
	
}, 1000); 

*/

}
</script>

<script defer>
	DisplayScripts();
	if (ping) {
	if (BIOS_Ver !== CurrentBIOS) {
		console.log("BIOS CAN BE UPDATED SEE UPDATER FOR MORE INFO");
	//	alert("BIOS CAN BE UPDATED SEE UPDATER FOR MORE INFO");
	}
	if (Client_Ver !== CurrentCver) {
		console.log("CLIENT CAN BE UPDATED SEE UPDATER FOR MORE INFO")
	} 
}
</script>
<script defer>

setTimeout(function (){
print("getting latest updates...");
console.log("getting latest updates...");
Update();
LoadScripts();
}, 1000); 

</script>
<script>
document.title = "OEXE CLIENT";


const OEXE = new BroadcastChannel("OEXE_DEV");

setTimeout(function (){
console.log(window.location.origin == null);
  if (window.location.origin == null || "") { 
alert("WARNING YOU THERE IS NO PAGE ORIGIN AND THINGS LIKE LOCALSTORAGE WILL NOT WORK"); 
}

       
     
}, 1000); 





function PostBC(message) {
OEXE.postMessage(message);
}






function IBC() {


var e = gd.createElement('script');
var string = `
const OEXE = new BroadcastChannel("OEXE_DEV");

OEXE.onmessage = (event) => { 
console.log(event);
eval(event.data); 
};
`
e.innerHTML = string;
alert("IMPORTED " + e);

gd.body.appendChild(e);
}












var StoreLoaded = false;
var compiled;
var enc = "b64";
var fd;
var file;
var gd;
var exe;
var COMP_DATA;
var Gw;
var doc = document.implementation.createHTMLDocument();
var JustCompiled;
function handleFileSelect(event) {
    const reader = new FileReader()
    reader.onload = handleFileLoad;
    reader.readAsText(event.target.files[0])
  }
  
  function handleFileLoad(event) {
    console.log(event.target.result);
    fd = event.target.result;
    file = event.target;
 //   Execute();

  }
  
  function init() {
    document.getElementById('fileInput').addEventListener('change', handleFileSelect, false);
  }

function B(v) {
    eval(v);
}

init();


function Execute() {
	var params = [
    'height='+screen.height,
    'width='+screen.width,
    'fullscreen=yes' // only works in IE, but here for completeness
].join(',');
	//Gw
	//fd
	//COMP_DATA
	if (GetFileName() == undefined) {
		println("EXECUTEING: OEXE","error");
	}else {
	println("EXECUTEING: " + GetFileName(),"error");
	}
    eval(fd);
    var win = window.open("", "OASIS EXE", params);
	win.moveTo(0,0);
	 Gw = win;
    var doc = win.document;
    gd = doc;
    doc.head.innerHTML = COMP_DATA.head; 
    doc.body.innerHTML = COMP_DATA.body;
  doc.body.id = COMP_DATA.BID;

for (let i = 0; i < COMP_DATA.js.length; i++) {
var sc = doc.createElement('script');
if (COMP_DATA.js[i].encr == "b64") {
sc.innerHTML = atob(COMP_DATA.js[i].code);
}else {
  sc.innerHTML = COMP_DATA.js[i].code;
}
sc.id = COMP_DATA.js[i].id;
sc.type = COMP_DATA.js[i].type;
doc.body.appendChild(sc);


}


}


function ExecuteURL(src){
	//Gw
	//fd
	//COMP_DATA
	var params = [
    'height='+screen.height,
    'width='+screen.width,
    'fullscreen=yes' // only works in IE, but here for completeness
].join(',');
	Load(src,src);
	setTimeout(function (){
 	println("EXECUTEING FROM: " + src,"error");
    eval(fd);
    var win = window.open("", "OASIS EXE", params);
	win.moveTo(0,0);
	 Gw = win;
    var doc = win.document;
    gd = doc;
    doc.head.innerHTML = COMP_DATA.head; 
    doc.body.innerHTML = COMP_DATA.body;
  doc.body.id = COMP_DATA.BID;

for (let i = 0; i < COMP_DATA.js.length; i++) {
var sc = doc.createElement('script');
if (COMP_DATA.js[i].encr == "b64") {
sc.innerHTML = atob(COMP_DATA.js[i].code);
}else {
  sc.innerHTML = COMP_DATA.js[i].code;
}
sc.id = COMP_DATA.js[i].id;
sc.type = COMP_DATA.js[i].type;
doc.body.appendChild(sc);


}
}, 2000); 


}






//download("FileName"+".OEXE","var COMP_DATA = " + JSON.stringify(JustCompiled));
function download(filename, text) {
    var element = document.createElement('a');
    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
    element.setAttribute('download', filename);
  
    element.style.display = 'none';
    document.body.appendChild(element);
  
    element.click();
  
    document.body.removeChild(element);
  }


function stripScripts(s) {
    var div = doc.createElement('div');
    div.innerHTML = s;
    var scripts = div.getElementsByTagName('script');
    var i = scripts.length;
    while (i--) {
     scripts[i].parentNode.removeChild(scripts[i]);
    }
    return div.innerHTML;
    }









function Compile(data,enc) {
	var FileName = GetFileName();
	FileName = FileName.split(".html")
	FileName = FileName[0];
    var comp = {
        js: [],
        body: "",
        head: "",
        BID: "",
		body_items: {
			onLoad: "",
			style: ""
		}
    }

doc.documentElement.innerHTML = data;
var str = stripScripts(doc.body.innerHTML);
var js = [];
for (let i = 0; i < doc.getElementsByTagName('script').length; i++) {
/*
    comp.js.push({
        code: btoa(doc.getElementsByTagName('script')[i].innerHTML),
        id: doc.getElementsByTagName('script')[i].id,
        type: doc.getElementsByTagName('script')[i].type,
        encr: "b64"
    })   
*/
    comp.js.push({
        code: doc.getElementsByTagName('script')[i].innerHTML,
        id: doc.getElementsByTagName('script')[i].id,
        type: doc.getElementsByTagName('script')[i].type,
        encr: "none"
    })   

js.push(doc.getElementsByTagName('script')[i]);
}
comp.body = str;
comp.head = doc.head.innerHTML;
comp.BID = doc.body.id;


console.log(comp);
 download(FileName+".OEXE","var COMP_DATA = " + JSON.stringify(comp));
 JustCompiled = comp;
return comp;
}



















</script>






<script type="text/javascript">
	

	

	function browser() {
	     window.open(
	          "https://g1kk4.csb.app",
	          "_blank",
	          "toolbar=yes,scrollbars=yes,resizable=yes,top=500,left=500,width=1000,height=500"
	        );
	}
	

	function frame(url)
	 {
	     (function() {
	  // container
	  var container = document.createElement("div");
	  container.id = "link-viewer";
	

	  container.style.all = "unset";
	

	  container.style.backgroundColor = "#FFF";
	  container.style.width = "600px";	
	  container.style.height = "600px";
	  container.style.border = "solid 1px #AAA";
	  container.style.borderRadius = "2px";
	  container.style.position = "fixed";
	  container.style.top = "100px";
	  container.style.left = "100px";
	  container.style.zIndex = "9999999999999999999";
	

	  // iFrame
	  var iFrame = document.createElement("iframe");
	  iFrame.id = "link-viewer-iframe";
	

	  iFrame.style.all = "unset";
	

	  iFrame.style.margin = "0px";
	  iFrame.style.width = container.style.width;
	  iFrame.height = container.style.height;
	  iFrame.style.border = "none";
	  iFrame.src = url;
	

	  iFrame.style.resize = "both";
	  iFrame.style.overflow = "hidden";
	

	  // content holder
	  var contentHolder = document.createElement("div");
	  contentHolder.id = "link-viewer-content-holder";
	

	  contentHolder.style.all = "unset";
	

	  contentHolder.style.width = "400px";
	  contentHolder.style.height = "600px";
	  contentHolder.style.padding = "0px";
	  contentHolder.style.margin = "0px";
	

	  contentHolder.append(iFrame);
	  container.append(contentHolder);
	

	  // header
	  var header = document.createElement("div");
	  header.id = "link-viewer-header";
	

	  header.style.all = "unset";
	

	  header.style.display = "flex";
	  header.style.justifyContent = "space-between";
	  header.style.alignItems = "center";
	  header.style.userSelect = "none";
	  header.style.padding = "3px";
	  header.style.margin = "0px";
	  header.style.borderBottom = "solid 1px #AAA";
	

	  header.style.height = "20px";
	  header.style.width = Number(contentHolder.style.width.slice(0, -2) - 6) + "px";
	

	  var dragged = false;
	  var startX = 0;
	  var startY = 0;
	  header.addEventListener("mousedown", function(event) {
	    startX = Number(container.style.left.slice(0, -2)) - event.clientX;
	    startY = Number(container.style.top.slice(0, -2)) - event.clientY;
	    dragged = true;
	  });
	  header.addEventListener("mouseup", function(event) {
	    dragged = false;
	  });
	

	  // Also keeping track of size too
	  window.addEventListener("mousemove", function(event) {
	    if (dragged) {
	      container.style.top = (event.clientY + startY) + "px";
	      container.style.left = (event.clientX + startX) + "px";
	    }
	    var x = Number(container.style.left.slice(0, -2));
	    var y = Number(container.style.top.slice(0, -2));
	    if (x < 0) {
	      container.style.left = "0px";
	    }
	    if (y < 0) {
	      container.style.top = "0px";
	    }
	

	    contentHolder.style.height = iFrame.style.height;
	    contentHolder.style.width = iFrame.style.width;
	

	    header.style.width = (Number(contentHolder.style.width.slice(0, -2)) - 6) + "px";
	

	    container.style.width = contentHolder.style.width;
	    container.style.height = (Number(contentHolder.style.height.slice(0, -2)) + 27) + "px";
	

	    if(Number(header.style.width.slice(0, -2)) < 300){
	    contentHolder.style.width = "300px";
	    header.style.width = "294px";
	    container.style.width = "300px";
	    iFrame.style.width = "300px";
	    }
	  });
	

	  // text stuff
	  var headerTextHolder = document.createElement("div");
	

	  headerTextHolder.style.all = "unset";
	

	  // header text
	  var headerText = document.createElement("h1");
	  headerText.textContent = "Link Viewer";
	

	  headerText.style.all = "unset";
	

	  headerText.style.fontFamily = "sans-serif";
	  headerText.style.color = "#444";
	  headerText.style.fontSize = "20px";
	  headerText.style.margin = "0px";
	  headerText.style.padding = "0px";
	

	  headerTextHolder.append(headerText);
	  header.append(headerTextHolder);
	

	  // button stuff 
	  var headerButtonHolder = document.createElement("div");
	

	  headerButtonHolder.style.all = "unset";
	

	  // link button
	  var lButton = document.createElement("button");
	  lButton.textContent = "run url";
	

	  lButton.style.all = "unset";
	

	  lButton.style.fontFamily = "sans-serif";
	  lButton.style.width = "100px";
	  lButton.style.height = "20px";
	  lButton.style.cursor = "pointer";
	  lButton.style.margin = "0px 3px 0px 3px";
	  lButton.style.color = "#333";
	  lButton.style.border = "solid 1px #333";
	  lButton.style.borderRadius = "2px";
	  lButton.style.backgroundColor = "#EEE";
	  lButton.style.textAlign = "center";
	

	  lButton.addEventListener("mouseover", function(event) {
	    lButton.style.backgroundColor = "#DDD";
	  });
	  lButton.addEventListener("mouseleave", function(event) {
	    lButton.style.backgroundColor = "#EEE";
	  });
	  lButton.addEventListener("click", function(event) {
	   
	

	    iFrame.src = url;
	  });
	

	//  headerButtonHolder.append(lButton);
	

	  // minimize button
	  var mButton = document.createElement("button");
	  mButton.textContent = "-";
	

	  mButton.style.all = "unset";
	

	  mButton.style.fontFamily = "sans-serif";
	  mButton.style.width = "20px";
	  mButton.style.height = "20px";
	  mButton.style.cursor = "pointer";
	  mButton.style.margin = "0px 3px 0px 3px";
	  mButton.style.color = "#333";
	  mButton.style.border = "solid 1px #333";
	  mButton.style.borderRadius = "2px";
	  mButton.style.backgroundColor = "#EEE";
	  mButton.style.textAlign = "center";
	

	  mButton.addEventListener("mouseover", function(event) {
	    mButton.style.backgroundColor = "#DDD";
	  });
	  mButton.addEventListener("mouseleave", function(event) {
	    mButton.style.backgroundColor = "#EEE";
	  });
	  mButton.addEventListener("click", function(event) {
	    var closed = contentHolder.style.display === "none";
	    if (closed) {
	      contentHolder.style.display = "block";
	      header.style.borderBottom = "solid 1px #AAA";
	    } else {
	      contentHolder.style.display = "none";
	      header.style.borderBottom = "none";
	    }
	  });
	

	  headerButtonHolder.append(mButton);
	

	  // x button
	  var xButton = document.createElement("button");
	  xButton.textContent = "x";
	

	  xButton.style.all = "unset";
	

	  xButton.style.fontFamily = "sans-serif";
	  xButton.style.width = "20px";
	  xButton.style.height = "20px";
	  xButton.style.cursor = "pointer";
	  xButton.style.margin = "0px 3px 0px 3px";
	  xButton.style.color = "#333";
	  xButton.style.border = "solid 1px #333";
	  xButton.style.borderRadius = "2px";
	  xButton.style.backgroundColor = "#F33";
	  xButton.style.textAlign = "center";
	

	  xButton.addEventListener("mouseover", function(event) {
	    xButton.style.backgroundColor = "#E22";
	  });
	  xButton.addEventListener("mouseleave", function(event) {
	    xButton.style.backgroundColor = "#F33";
	  });
	  xButton.addEventListener("click", function(event) {
	    container.remove();
	  });
	

	  headerButtonHolder.append(xButton);
	  header.append(headerButtonHolder);
	

	  contentHolder.before(header);
	

	  // add to body
	  document.body = document.body || document.createElement("body");
	  document.body.append(container);
	})();
	 }
	var
	histList = [""],
	histPos = 0,
	_scope = {},
	_win, // a top-level context
	question,
	_in,
	_out,
	tooManyMatches = null,
	lastError = null;
	

	function refocus()
	{
	  _in.blur(); // Needed for Mozilla to scroll correctly.
	//  _in.focus();
	}
	

	function init()
	{
	  _in = document.getElementById("input");
	  _out = document.getElementById("output");
	

	  _win = window;
	

	  if (opener && !opener.closed)
	  {
	    println("Using bookmarklet version of shell: commands will run in opener's context.", "message");
	    _win = window;
	  }
	

	  initTarget();
	

	  recalculateInputHeight();
	  refocus();
	}
	

	function initTarget()
	{
	  _win.Shell = window;
	  _win.print = shellCommands.print;
	}
	

	

	// Unless the user is selected something, refocus the textbox.
	// (requested by caillon, brendan, asa)
	function keepFocusInTextbox(e)
	{
	  var g = e.srcElement ? e.srcElement : e.target; // IE vs. standard
	

	  while (!g.tagName)
	    g = g.parentNode;
	  var t = g.tagName.toUpperCase();
	  if (t=="A" || t=="INPUT")
	    return;
	

	  if (window.getSelection) {
	    // Mozilla
	    if (String(window.getSelection()))
	      return;
	  }
	  else if (document.getSelection) {
	    // Opera? Netscape 4?
	    if (document.getSelection())
	      return;
	  }
	  else {
	    // IE
	    if ( document.selection.createRange().text )
	      return;
	  }
	

	  refocus();
	}
	

	function inputKeydown(e) {
	  // Use onkeydown because IE doesn't support onkeypress for arrow keys
	

	  //alert(e.keyCode + " ^ " + e.keycode);
	

	  if (e.shiftKey && e.keyCode == 13) { // shift-enter
	    // don't do anything; allow the shift-enter to insert a line break as normal
	  } else if (e.keyCode == 13) { // enter
	    // execute the input on enter
		
	    try { go(); } catch(er) { alert(er); };
	    setTimeout(function() { _in.value = ""; }, 0); // can't preventDefault on input, so clear it later
	  } else if (e.keyCode == 38) { // up
	    // go up in history if at top or ctrl-up
	    if (e.ctrlKey || caretInFirstLine(_in))
	      hist(true);
	  } else if (e.keyCode == 40) { // down
	    // go down in history if at end or ctrl-down
	    if (e.ctrlKey || caretInLastLine(_in))
	      hist(false);
	  } else if (e.keyCode == 9 ||e.keyCode == 18) { // tab
	    tabcomplete();
	    setTimeout(function() { refocus(); }, 0); // refocus because tab was hit
	  } else { }
	

	  setTimeout(recalculateInputHeight, 0);
	

	  //return true;
	};
	

	function caretInFirstLine(textbox)
	{
	  // IE doesn't support selectionStart/selectionEnd
	  if (textbox.selectionStart == undefined)
	    return true;
	

	  var firstLineBreak = textbox.value.indexOf("\n");
	

	  return ((firstLineBreak == -1) || (textbox.selectionStart <= firstLineBreak));
	}
	

	function caretInLastLine(textbox)
	{
	  // IE doesn't support selectionStart/selectionEnd
	  if (textbox.selectionEnd == undefined)
	    return true;
	

	  var lastLineBreak = textbox.value.lastIndexOf("\n");
	

	  return (textbox.selectionEnd > lastLineBreak);
	}
	

	function recalculateInputHeight()
	{
	  var rows = _in.value.split(/\n/).length
	    + 1 // prevent scrollbar flickering in Mozilla
	    + (window.opera ? 1 : 0); // leave room for scrollbar in Opera
	

	  if (_in.rows != rows) // without this check, it is impossible to select text in Opera 7.60 or Opera 8.0.
	    _in.rows = rows;
	}
	

	function println(s, type)
	{
	  if((s=String(s)))
	  {
		console.log("OEXE SHELL: " + s);
	    var newdiv = document.createElement("div");
	    newdiv.appendChild(document.createTextNode(s));
	    newdiv.className = type;
	    _out.appendChild(newdiv);
	    return newdiv;
	  }
	}
	

	function printWithRunin(h, s, type)
	{
	  var div = println(s, type);
	  var head = document.createElement("strong");
	  head.appendChild(document.createTextNode(h + ": "));
	  div.insertBefore(head, div.firstChild);
	}
	

	

	var shellCommands =
	{
	load : function load(url)
	{
	  var s = _win.document.createElement("script");
	  s.type = "text/javascript";
	  s.src = url;
	  _win.document.getElementsByTagName("head")[0].appendChild(s);
	  println("Loading " + url + "...", "message");
	},
	

	clear : function clear()
	{
document.getElementById("output").innerHTML = '';
	},
	

	print : function print(s) { println(s, "print"); },
	

	// the normal function, "print", shouldn't return a value
	// (suggested by brendan; later noticed it was a problem when showing others)
	pr : function pr(s)
	{
	  shellCommands.print(s); // need to specify shellCommands so it doesn't try window.print()!
	  return s;
	},
	

	props : function props(e, onePerLine)
	{
	  if (e === null) {
	    println("props called with null argument", "error");
	    return;
	  }
	

	  if (e === undefined) {
	    println("props called with undefined argument", "error");
	    return;
	  }
	

	  var ns = ["Methods", "Fields", "Unreachables"];
	  var as = [[], [], []]; // array of (empty) arrays of arrays!
	  var p, j, i; // loop variables, several used multiple times
	

	  var protoLevels = 0;
	

	  for (p = e; p; p = p.__proto__)
	  {
	    for (i=0; i<ns.length; ++i)
	      as[i][protoLevels] = [];
	    ++protoLevels;
	  }
	

	  for(var a in e)
	  {
	    // Shortcoming: doesn't check that VALUES are the same in object and prototype.
	

	    var protoLevel = -1;
	    try
	    {
	      for (p = e; p && (a in p); p = p.__proto__)
	        ++protoLevel;
	    }
	    catch(er) { protoLevel = 0; } // "in" operator throws when param to props() is a string
	

	    var type = 1;
	    try
	    {
	      if ((typeof e[a]) == "function")
	        type = 0;
	    }
	    catch (er) { type = 2; }
	

	    as[type][protoLevel].push(a);
	  }
	

	  function times(s, n) { return n ? s + times(s, n-1) : ""; }
	

	  for (j=0; j<protoLevels; ++j)
	    for (i=0;i<ns.length;++i)
	      if (as[i][j].length)
	        printWithRunin(
	          ns[i] + times(" of prototype", j),
	          (onePerLine ? "\n\n" : "") + as[i][j].sort().join(onePerLine ? "\n" : ", ") + (onePerLine ? "\n\n" : ""),
	          "propList"
	        );
	},
	

	blink : function blink(node)
	{
	  if (!node)                     throw("blink: argument is null or undefined.");
	  if (node.nodeType == null)     throw("blink: argument must be a node.");
	  if (node.nodeType == 3)        throw("blink: argument must not be a text node");
	  if (node.documentElement)      throw("blink: argument must not be the document object");
	

	  function setOutline(o) {
	    return function() {
	      if (node.style.outline != node.style.bogusProperty) {
	        // browser supports outline (Firefox 1.1 and newer, CSS3, Opera 8).
	        node.style.outline = o;
	      }
	      else if (node.style.MozOutline != node.style.bogusProperty) {
	        // browser supports MozOutline (Firefox 1.0.x and older)
	        node.style.MozOutline = o;
	      }
	      else {
	        // browser only supports border (IE). border is a fallback because it moves things around.
	        node.style.border = o;
	      }
	    }
	  }
	

	  function focusIt(a) {
	    return function() {
	      a.focus();
	    }
	  }
	

	  if (node.ownerDocument) {
	    var windowToFocusNow = (node.ownerDocument.defaultView || node.ownerDocument.parentWindow); // Moz vs. IE
	    if (windowToFocusNow)
	      setTimeout(focusIt(windowToFocusNow.top), 0);
	  }
	

	  for(var i=1;i<7;++i)
	    setTimeout(setOutline((i%2)?'3px solid red':'none'), i*100);
	

	  setTimeout(focusIt(window), 800);
	  setTimeout(focusIt(_in), 810);
	},
	

	scope : function scope(sc)
	{
	  if (!sc) sc = {};
	  _scope = sc;
	  println("Scope is now " + sc + ".  If a variable is not found in this scope, window will also be searched.  New variables will still go on window.", "message");
	},
	

	mathHelp : function mathHelp()
	{
	  printWithRunin("Math constants", "E, LN2, LN10, LOG2E, LOG10E, PI, SQRT1_2, SQRT2", "propList");
	  printWithRunin("Math methods", "abs, acos, asin, atan, atan2, ceil, cos, exp, floor, log, max, min, pow, random, round, sin, sqrt, tan", "propList");
	},
	

	ans : undefined
	};
	

	

	function hist(up)
	{
	  // histList[0] = first command entered, [1] = second, etc.
	  // type something, press up --> thing typed is now in "limbo"
	  // (last item in histList) and should be reachable by pressing
	  // down again.
	

	  var L = histList.length;
	

	  if (L == 1)
	    return;
	

	  if (up)
	  {
	    if (histPos == L-1)
	    {
	      // Save this entry in case the user hits the down key.
	      histList[histPos] = _in.value;
	    }
	

	    if (histPos > 0)
	    {
	      histPos--;
	      // Use a timeout to prevent up from moving cursor within new text
	      // Set to nothing first for the same reason
	      setTimeout(
	        function() {
	          _in.value = '';
	          _in.value = histList[histPos];
	          var caretPos = _in.value.length;
	          if (_in.setSelectionRange)
	            _in.setSelectionRange(caretPos, caretPos);
	        },
	        0
	      );
	    }
	  }
	  else // down
	  {
	    if (histPos < L-1)
	    {
	      histPos++;
	      _in.value = histList[histPos];
	    }
	    else if (histPos == L-1)
	    {
	      // Already on the current entry: clear but save
	      if (_in.value)
	      {
	        histList[histPos] = _in.value;
	        ++histPos;
	        _in.value = "";
	      }
	    }
	  }
	}
	

	function tabcomplete()
	{
	  /*
	   * Working backwards from s[from], find the spot
	   * where this expression starts.  It will scan
	   * until it hits a mismatched ( or a space,
	   * but it skips over quoted strings.
	   * If stopAtDot is true, stop at a '.'
	   */
	  function findbeginning(s, from, stopAtDot)
	  {
	    /*
	     *  Complicated function.
	     *
	     *  Return true if s[i] == q BUT ONLY IF
	     *  s[i-1] is not a backslash.
	     */
	    function equalButNotEscaped(s,i,q)
	    {
	      if(s.charAt(i) != q) // not equal go no further
	        return false;
	

	      if(i==0) // beginning of string
	        return true;
	

	      if(s.charAt(i-1) == '\\') // escaped?
	        return false;
	

	      return true;
	    }
	

	    var nparens = 0;
	    var i;
	    for(i=from; i>=0; i--)
	    {
	      if(s.charAt(i) == ' ')
	        break;
	

	      if(stopAtDot && s.charAt(i) == '.')
	        break;
	

	      if(s.charAt(i) == ')')
	        nparens++;
	      else if(s.charAt(i) == '(')
	        nparens--;
	

	      if(nparens < 0)
	        break;
	

	      // skip quoted strings
	      if(s.charAt(i) == '\'' || s.charAt(i) == '\"')
	      {
	        //dump("skipping quoted chars: ");
	        var quot = s.charAt(i);
	        i--;
	        while(i >= 0 && !equalButNotEscaped(s,i,quot)) {
	          //dump(s.charAt(i));
	          i--;
	        }
	        //dump("\n");
	      }
	    }
	    return i;
	  }
	

	  // XXX should be used more consistently (instead of using selectionStart/selectionEnd throughout code)
	  // XXX doesn't work in IE, even though it contains IE-specific code
	  function getcaretpos(inp)
	  {
	    if(inp.selectionEnd != null)
	      return inp.selectionEnd;
	

	    if(inp.createTextRange)
	    {
	      var docrange = _win.Shell.document.selection.createRange();
	      var inprange = inp.createTextRange();
	      if (inprange.setEndPoint)
	      {
	        inprange.setEndPoint('EndToStart', docrange);
	        return inprange.text.length;
	      }
	    }
	

	    return inp.value.length; // sucks, punt
	  }
	

	  function setselectionto(inp,pos)
	  {
	    if(inp.selectionStart) {
	      inp.selectionStart = inp.selectionEnd = pos;
	    }
	    else if(inp.createTextRange) {
	      var docrange = _win.Shell.document.selection.createRange();
	      var inprange = inp.createTextRange();
	      inprange.move('character',pos);
	      inprange.select();
	    }
	    else { // err...
	    /*
	      inp.select();
	      if(_win.Shell.document.getSelection())
	        _win.Shell.document.getSelection() = "";
	        */
	    }
	  }
	    // get position of cursor within the input box
	    var caret = getcaretpos(_in);
	

	    if(caret) {
	      //dump("----\n");
	      var dotpos, spacepos, complete, obj;
	      //dump("caret pos: " + caret + "\n");
	      // see if there's a dot before here
	      dotpos = findbeginning(_in.value, caret-1, true);
	      //dump("dot pos: " + dotpos + "\n");
	      if(dotpos == -1 || _in.value.charAt(dotpos) != '.') {
	        dotpos = caret;
	//dump("changed dot pos: " + dotpos + "\n");
	      }
	

	      // look backwards for a non-variable-name character
	      spacepos = findbeginning(_in.value, dotpos-1, false);
	      //dump("space pos: " + spacepos + "\n");
	      // get the object we're trying to complete on
	      if(spacepos == dotpos || spacepos+1 == dotpos || dotpos == caret)
	      {
	        // try completing function args
	        if(_in.value.charAt(dotpos) == '(' ||
	 (_in.value.charAt(spacepos) == '(' && (spacepos+1) == dotpos))
	        {
	          var fn,fname;
	  var from = (_in.value.charAt(dotpos) == '(') ? dotpos : spacepos;
	          spacepos = findbeginning(_in.value, from-1, false);
	

	          fname = _in.value.substr(spacepos+1,from-(spacepos+1));
	  //dump("fname: " + fname + "\n");
	          try {
	            with(_win.Shell._scope)
	              with(_win)
	                with(Shell.shellCommands)
	                  fn = eval(fname);
	          }
	          catch(er) {
	            //dump('fn is not a valid object\n');
	            return;
	          }
	          if(fn == undefined) {
	             //dump('fn is undefined');
	             return;
	          }
	          if(fn instanceof Function)
	          {
	            // Print function definition, including argument names, but not function body
	            if(!fn.toString().match(/function .+?\(\) +\{\n +\[native code\]\n\}/))
	              println(fn.toString().match(/function .+?\(.*?\)/), "tabcomplete");
	          }
	

	          return;
	        }
	        else
	          obj = _win;
	      }
	      else
	      {
	        var objname = _in.value.substr(spacepos+1,dotpos-(spacepos+1));
	        //dump("objname: |" + objname + "|\n");
	        try {
	          with(_win.Shell._scope)
	            with(_win)
	                obj = eval(objname);
	        }
	        catch(er) {
	          printError(er);
	          return;
	        }
	        if(obj == undefined) {
	          // sometimes this is tabcomplete's fault, so don't print it :(
	          // e.g. completing from "print(document.getElements"
	          // println("Can't complete from null or undefined expression " + objname, "error");
	          return;
	        }
	      }
	      //dump("obj: " + obj + "\n");
	      // get the thing we're trying to complete
	      if(dotpos == caret)
	      {
	        if(spacepos+1 == dotpos || spacepos == dotpos)
	        {
	          // nothing to complete
	          //dump("nothing to complete\n");
	          return;
	        }
	

	        complete = _in.value.substr(spacepos+1,dotpos-(spacepos+1));
	      }
	      else {
	        complete = _in.value.substr(dotpos+1,caret-(dotpos+1));
	      }
	      //dump("complete: " + complete + "\n");
	      // ok, now look at all the props/methods of this obj
	      // and find ones starting with 'complete'
	      var matches = [];
	      var bestmatch = null;
	      for(var a in obj)
	      {
	        //a = a.toString();
	        //XXX: making it lowercase could help some cases,
	        // but screws up my general logic.
	        if(a.substr(0,complete.length) == complete) {
	          matches.push(a);
	          ////dump("match: " + a + "\n");
	          // if no best match, this is the best match
	          if(bestmatch == null)
	          {
	            bestmatch = a;
	          }
	          else {
	            // the best match is the longest common string
	            function min(a,b){ return ((a<b)?a:b); }
	            var i;
	            for(i=0; i< min(bestmatch.length, a.length); i++)
	            {
	              if(bestmatch.charAt(i) != a.charAt(i))
	                break;
	            }
	            bestmatch = bestmatch.substr(0,i);
	            ////dump("bestmatch len: " + i + "\n");
	          }
	          ////dump("bestmatch: " + bestmatch + "\n");
	        }
	      }
	      bestmatch = (bestmatch || "");
	      ////dump("matches: " + matches + "\n");
	      var objAndComplete = (objname || obj) + "." + bestmatch;
	      //dump("matches.length: " + matches.length + ", tooManyMatches: " + tooManyMatches + ", objAndComplete: " + objAndComplete + "\n");
	      if(matches.length > 1 && (tooManyMatches == objAndComplete || matches.length <= 10)) {
	

	        printWithRunin("Matches: ", matches.join(', '), "tabcomplete");
	        tooManyMatches = null;
	      }
	      else if(matches.length > 10)
	      {
	        println(matches.length + " matches.  Press tab again to see them all", "tabcomplete");
	        tooManyMatches = objAndComplete;
	      }
	      else {
	        tooManyMatches = null;
	      }
	      if(bestmatch != "")
	      {
	        var sstart;
	        if(dotpos == caret) {
	          sstart = spacepos+1;
	        }
	        else {
	          sstart = dotpos+1;
	        }
	        _in.value = _in.value.substr(0, sstart)
	                  + bestmatch
	                  + _in.value.substr(caret);
	        setselectionto(_in,caret + (bestmatch.length - complete.length));
	      }
	    }
	}
	

	function printQuestion(q)
	{
	  println(q, "input");
	}
	

	function printAnswer(a)
	{
	  if (a !== undefined) {
	    println(a, "normalOutput");
	    shellCommands.ans = a;
	  }
	}
	

	function printError(er)
	{
	  var lineNumberString;
	

	  lastError = er; // for debugging the shell
	  if (er.name)
	  {
	    // lineNumberString should not be "", to avoid a very wacky bug in IE 6.
	    lineNumberString = (er.lineNumber != undefined) ? (" on line " + er.lineNumber + ": ") : ": ";
	    println(er.name + lineNumberString + er.message, "error"); // Because IE doesn't have error.toString.
	  }
	  else
	    println(er, "error"); // Because security errors in Moz /only/ have toString.
	}
	

	function go(s)
	{
	  _in.value = question = s ? s : _in.value;
	

	  if (question == "")
	    return;
	

	  histList[histList.length-1] = question;
	  histList[histList.length] = "";
	  histPos = histList.length - 1;
	

	  // Unfortunately, this has to happen *before* the JavaScript is run, so that
	  // print() output will go in the right place.
	  _in.value='';
	  recalculateInputHeight();
	  printQuestion(question);
	

	  if (_win.closed) {
	    printError("Target window has been closed.");
	    return;
	  }
	

	  try { ("Shell" in _win) }
	  catch(er) {
	    printError("The JavaScript Shell cannot access variables in the target window.  The most likely reason is that the target window now has a different page loaded and that page has a different hostname than the original page.");
	    return;
	  }
	

	  if (!("Shell" in _win))
	    initTarget(); // silent
	

	  // Evaluate Shell.question using _win's eval (this is why eval isn't in the |with|, IIRC).
	  _win.location.href = "javascript:try{ Shell.printAnswer(eval('with(Shell._scope) with(Shell.shellCommands) {' + Shell.question + String.fromCharCode(10) + '}')); } catch(er) { Shell.printError(er); }; setTimeout(Shell.refocus, 0); void 0";
	}
	

	</script>
	

	<!-- for http://ted.mielczarek.org/code/mozilla/extensiondev/ -->

	<style type="text/css">

	    
	    #output { white-space: pre; white-space: -moz-pre-wrap; height: 45vh; background-color: rgb(37, 37, 37); overflow: auto;} /* Preserve line breaks, but wrap too if browser supports it */
	    h3 { margin-top: 0; margin-bottom: 0em; }
	    h3 + div { margin: 0; }
	    
	    form { margin: 0; padding: 0; }
	    #input { width: 100%; border: none; padding: 0; overflow: auto; border-style: solid; border-width: 1px; height: 250px; background: black; border-color: green;}
	    #input:focus {
	      outline: none;
	      border-color: rgba(0, 255, 0, 0.589);
	    }
	    .input { color: lime;  font: inherit; font-weight: bold; margin-top: .5em; /* background: #E6E6FF; */ }
	    .normalOutput {margin-top: 5px; color: lime;  }
	    .print {margin-top: 10px; color: rgb(0, 155, 0);  }
	    .error { color: red;  margin-top: 5px;}
	    .propList { color: green; margin-top: 5px; }
	    .message { color: cyan;  margin-top: 5px;}
	    .tabcomplete { color: purple;  margin-top: 5px;}
	    
	    
	    .bit {
	        font-size: large;
	        font-family: '8bit';
	    }
	    

	    
	    body {
			font-family: sans-serif;
		}
	    

	    @font-face {
	      font-family: '8bit';
	      src: url('https://cdn.jsdelivr.net/gh/jackb0back/OEXE_COMPILER_@main/DiaryOfAn8BitMage-lYDD.ttf');
	    }

	    </style>

";
var ping = true;
